[{"authors":null,"categories":null,"content":"Tropical Solar: Capricornus (♑) Cardinal Earth Sea-goat | The Sumerian Enki was the god of intelligence, creation, crafts, magic \u0026amp; water\nSidereal Solar: Sagittarius (♐) Mutable Fire Archer | The centaur of mythology, the learned healer whose higher intelligence forms a bridge between Earth and Heaven\nChinese: Wood Snake (蛇) Month: May Time: 9:00 to 11:00 a.m.\n","date":1372636800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1372636800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Tropical Solar: Capricornus (♑) Cardinal Earth Sea-goat | The Sumerian Enki was the god of intelligence, creation, crafts, magic \u0026amp; water\nSidereal Solar: Sagittarius (♐) Mutable Fire Archer | The centaur of mythology, the learned healer whose higher intelligence forms a bridge between Earth and Heaven","tags":null,"title":"Steven Almeroth","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":" This guide serves as a reminder for me when I go to install Manjaro again. I will describe what I did after install to get my workstation back up and running with what I need to do JavaScript / TypeScript development.\n  My system      Lenovo Legion T5 x86_64 Grub 2 Kernel 5.13 Manjaro Qonos 21.1 KDE 5.88 Plasma 5.23  Table of Contents  Pre-Install Post-Install  Update Firewall System Configuration   ! Scripts   Firefox   Keys   Bash   Hugo   Sublime   Development   Applications   Productivity   Node   Previous Installs    Pre-Install Note: You are going to have to backup your current files to another partition like I did or you could use an external drive or USB stick. I keep my console files in a GitHub repo, see Bash below.\nThe main things I backed up were:\n ~/.local/bin/ ~/.config/sublime-text/Packages/User/ ~/.gitconfig  Post-Install Here is my list of things I did to get up and running with a fresh Manjaro.\ncat /etc/lsb-release  DISTRIB_ID=ManjaroLinux DISTRIB_RELEASE=21.2.0 DISTRIB_CODENAME=Qonos  Update First update the local mirror and system packages\nsudo pacman-mirrors --fasttrack  sudo pacman -Syu  Firewall The firewall is super easy to setup for minimal protection\nsudo pacman -S --needed gufw  Then just run the GUI\ngufw  System Configuration Graphics Card    Install proprietary video drivers (Nvidia)\nsystemsettings5 msm_mhwd  Date and Time    Set date and time automatically\nsystemsettings5 clock  Package Management    sudo systemctl enable --now snapd.service  Yay sudo pacman -S --needed yay  yay -Y --gendb \u0026amp;\u0026amp; yay -Syu --devel  Uncomment Color option in /etc/pacman.conf\nSystem Monitor    sudo pacman -S --needed ksysguard  ksysguard --version  ksysguard 5.22.0  Reduce Swappiness    Good if you have an SSD (hard drive)\nI have 32G memory so I need to be swapping seldomly\nsudo su  echo \u0026quot;vm.swappiness=10\u0026quot; \u0026gt; /etc/sysctl.d/100-manjaro.conf  exit  Setup Block Cleaning Job    Good if you have an SSD (hard drive)\nsystemctl list-timers -all   NEXT LEFT LAST PASSED UNIT ACTIVATES \u0026gt; Mon 2021-11-29 18:46:32 EST 5min left n/a n/a systemd-tmpfiles-clean.timer systemd-tmpfiles-clean.ser\u0026gt; Tue 2021-11-30 00:00:00 EST 5h 18min left Mon 2021-11-29 17:43:41 EST 57min ago logrotate.timer logrotate.service Tue 2021-11-30 00:00:00 EST 5h 18min left Mon 2021-11-29 17:43:41 EST 57min ago man-db.timer man-db.service Tue 2021-11-30 00:00:00 EST 5h 18min left Mon 2021-11-29 17:43:41 EST 57min ago pkgfile-update.timer pkgfile-update.service Tue 2021-11-30 00:00:00 EST 5h 18min left Mon 2021-11-29 17:43:41 EST 57min ago shadow.timer shadow.service Thu 2021-12-02 10:39:52 EST 2 days left Mon 2021-11-29 17:43:41 EST 57min ago pamac-mirrorlist.timer pamac-mirrorlist.service Sat 2021-12-04 15:00:00 EST 4 days left Mon 2021-11-29 17:43:41 EST 57min ago pamac-cleancache.timer pamac-cleancache.service  systemctl status fstrim.timer   ○ fstrim.timer - Discard unused blocks once a week Loaded: loaded (/usr/lib/systemd/system/fstrim.timer; disabled; vendor preset: disabled) Active: inactive (dead)  sudo systemctl enable fstrim.timer   Created symlink /etc/systemd/system/timers.target.wants/fstrim.timer → /usr/lib/systemd/system/fstrim.timer.  systemctl status fstrim.timer   ○ fstrim.timer - Discard unused blocks once a week Loaded: loaded (/usr/lib/systemd/system/fstrim.timer; enabled; vendor preset: disabled) Active: inactive (dead)  systemctl status fstrim.timer   ● fstrim.timer - Discard unused blocks once a week Loaded: loaded (/usr/lib/systemd/system/fstrim.timer; enabled; vendor preset: disabled) Active: active (waiting) since Mon 2021-11-29 18:47:13 EST; 9s ago Trigger: Mon 2021-12-06 01:30:45 EST; 6 days left  Hosts    sudo hostnamectl set-hostname legion  sudo vim /etc/hosts  127.0.0.1 localhost 127.0.0.1 legion 104.237.140.142 cowboy    ! Scripts Restore ~/.local/bin/\n  Firefox Use dark theme\nabout:addons -\u0026gt; Themes  Update search engine to Duck Duck Go:\nabout:preferences#search -\u0026gt; Default Search Engine  Do not warn when closing multiple tabs:\nabout:config -\u0026gt; Search: browser.tabs.warn browser.tabs.warnOnClose false browser.tabs.warnOnCloseOtherTabs false  Add-ons\n Dark Reader by Alexander Shutau Traquility Reader by arunk    Keys Install ssh keys\nGenerate    https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\nssh-keygen -t ed25519 -C \u0026quot;stav@legion\u0026quot;  eval \u0026quot;$(ssh-agent -s)\u0026quot;  ssh-add ~/.ssh/id_ed255192  Add to remotes Manually copy contents of ~/.ssh/id_ed255192.pub to GitHub \u0026amp; Bitbucket.\nGitHub     https://github.com/settings/keys https://help.github.com/en/articles/adding-a-new-ssh-key-to-your-github-account  BitBucket     https://bitbucket.org/account/user/stav/ssh-keys/  Cowboy    Enable password login on remote host\nhttps://cloud.linode.com/linodes COWBOY LISH\ncowboy$ sed -iE 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config cowboy$ sudo systemctl restart sshd  Authorize key\ncat ~/.ssh/id_ed25519.pub | ssh cowboy 'cat \u0026gt;\u0026gt; ~/.ssh/authorized_keys'  Disable password login on remote host\ncowboy$ sed -iE 's/^PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config cowboy$ sudo systemctl restart sshd    Bash git clone git@github.com:stav/dotbash.git ~/.bash  Install bash_it $ git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it $ ~/.bash_it/install.sh # keep existing `.bashrc` and append templates (y)  Install Powerline theme https://github.com/Bash-it/bash-it/tree/master/themes/powerline\nmkdir ~/Public/powerline cd ~/Public/powerline git clone --depth=1 https://github.com/powerline/fonts.git ./fonts/install.sh wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf mv PowerlineSymbols.otf ~/.local/share/fonts/ fc-cache -vf ~/.local/share/fonts/ mkdir -p ~/.config/fontconfig/conf.d/ mv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/  Close all Terminal instances\nCopy files .bash_projects .bash-it.bash .bashrc  Link files for editor reference ls .bash_links/  .bash_links/.bash-it.bash -\u0026gt; ~/.bash-it.bash .bash_links/.bash_projects -\u0026gt; ~/.bash_projects .bash_links/.bashrc -\u0026gt; ~/.bashrc    Hugo It\u0026rsquo;s good to update this document as I\u0026rsquo;m installing.\nClone Repository git clone git@github.com:stav/steven.michael.git ~/Public/stav/steven.michael  cd ~/Public/stav/steven.michael  git submodule update --init --recursive  Instal Hugo Extended Version The Academic theme needs the extended version.\nIf you run Hugo but get an error like this:\n$ hugo Building sites ERROR: failed to transform resource: TOCSS: failed to transform \u0026quot;main_parsed.scss\u0026quot; (text/x-scss): this feature is not available in your current Hugo version, see https://goo.gl/YMrWcn  then you need the extended version.\nDownload and extract the Hugo extended version, see Assets (hugo_extended_0.64.0_Linux-64bit.tar.gz).\ncp ~/Downloads/hugo_extended_0.89.4_Linux-64bit/hugo ~/.local/bin/  Install Golang sudo pacman -S --needed go    Sublime Sublime Text is an excellent editor and Sublime Merge is good enough now that I hardly ever use the command line anymore for Git anymore.\nInstall curl -O https://download.sublimetext.com/sublimehq-pub.gpg \u0026amp;\u0026amp; sudo pacman-key --add sublimehq-pub.gpg \u0026amp;\u0026amp; sudo pacman-key --lsign-key 8A8F901A \u0026amp;\u0026amp; rm sublimehq-pub.gpg  echo -e \u0026quot;\\n[sublime-text]\\nServer = https://download.sublimetext.com/arch/stable/x86_64\u0026quot; | sudo tee -a /etc/pacman.conf  sudo pacman -Syu --needed sublime-text sublime-merge  License Add under help menu.\n----- BEGIN LICENSE ----- Steven Almeroth Single User License EA7E-... 104B ------ END LICENSE ------  Package Control You want Package Control from wbond.\nInstall Package Control Command Pallate (shft-ctrl-p) -\u0026gt; Install Package Control\nInstall packages Restore the following file from your backup and Package Control will automatically install all missing packages:\n ~/.config/sublime-text/Packages/User/Package Control.sublime-settings  then restart SublimeText.\nCopy Files Copy remaining backup files to ~/.config/sublime-text/Packages/User/\nDo not copy these:\n User/Package Control.cache/ User/Package Control.last-run User/Package Control.merged-ca-bundle User/Package Control.user-ca-bundle    Development sudo pacman -S --needed base-devel git meld    Applications sudo pacman -S --needed brave-browser libreoffice-fresh telegram-desktop thunderbird gimp mpv    Productivity sudo pacman -S --needed vim tree timeshift    Node We will use the Node Version Manager (nvm) to install specific versions as needed so first we just install the base packages\nInstall dependencies    sudo pamac install nodejs npm nvm  Use nvm to install node I needed to run a setup script to get nvm to run:\nsource /usr/share/nvm/init-nvm.sh  Let\u0026rsquo;s see what versions we can install:\nnvm ls-remote |grep Latest   v4.9.1 (Latest LTS: Argon) v6.17.1 (Latest LTS: Boron) v8.17.0 (Latest LTS: Carbon) v10.24.1 (Latest LTS: Dubnium) v12.22.7 (Latest LTS: Erbium) v14.18.2 (Latest LTS: Fermium) v16.13.1 (Latest LTS: Gallium)  nvm install 16  Now using node v16.13.1 (npm v8.1.2)  Install package managers corepack enable  Update yarn yarn set version stable  Install pnpm corepack prepare pnpm@6.22.2 --activate    Previous Installs I previously installed some other stuff:\n SUSE 15.1 Ubuntu 19.10 Ubuntu 19.04 Ubuntu 18.10 Ubuntu 17.10 Ubuntu 17.04 Ubuntu 16.04  ","date":1638316800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1638316800,"objectID":"81b0fb0920f22d1ed3598f4736e51394","permalink":"https://example.com/post/manjaro-21.2/","publishdate":"2021-12-01T00:00:00Z","relpermalink":"/post/manjaro-21.2/","section":"post","summary":"This guide serves as a reminder for me when I go to install Manjaro again. I will describe what I did after install to get my workstation back up and running with what I need to do JavaScript / TypeScript development.","tags":["Arch","Linux","Manjaro"],"title":"What to do after installing Manjaro Qonos 21.2","type":"post"},{"authors":null,"categories":null,"content":"Add Header Using the Nginx add_header directive can lead to duplicate header entries.\nConsider the following configuration file:\nserver { ... location = /ok { add_header Content-Type application/json; return 200 '{\u0026quot;result\u0026quot;:\u0026quot;ok\u0026quot;}'; } }  For me this resulted in the following response:\n$ curl -iI https://api.primesite.dev/ok HTTP/1.1 200 OK Date: Sat, 10 Oct 2020 03:40:20 GMT Content-Type: application/octet-stream Content-Type: application/json Content-Length: 15  Notice the duplicate Content-Type headers above. The first one with the value of \u0026ldquo;application/octet-stream\u0026rdquo; comes from my main nginx.conf file:\ndefault_type application/octet-stream;  But why are those headers duplicated? That\u0026rsquo;s a problem and especially confusing since the documentation says headers are inherited from other levels only if the current level (location in my case) does not contain the directive, which it does!\n There could be several add_header directives. These directives are inherited from the previous configuration level if and only if there are no add_header directives defined on the current level.\n Headers More There is a module called ngx_headers_more that can be easily installed to help untangle the mess that Nginx headers can become.\nMy system is Debian 10:\n$ cat /etc/os-release |grep PRETTY PRETTY_NAME=\u0026quot;Debian GNU/Linux 10 (buster)\u0026quot;  Here\u0026rsquo;s what I did to install it:\n$ sudo apt-get install libnginx-mod-http-headers-more-filter  And that added the file:\n/etc/nginx/modules-enabled/50-mod-http-headers-more-filter.conf  which is already in an included folder from nginx.conf:\ninclude /etc/nginx/modules-enabled/*.conf;  Virtual Host So all I had to do in my site config was to add the custom headers directive and reload the server config:\nserver { ... location = /ok { more_set_headers 'Content-Type: application/json'; return 200 '{\u0026quot;result\u0026quot;:\u0026quot;ok\u0026quot;}'; } }  $ sudo systemctl reload nginx.service  Now it works fine, no more dupes:\n$ curl -iI https://api.primesite.dev/ok HTTP/1.1 200 OK Date: Sat, 10 Oct 2020 04:16:20 GMT Content-Type: application/json Content-Length: 15  ","date":1602201600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602201600,"objectID":"444f5d4604968f46b1465f7e24ccf4a2","permalink":"https://example.com/post/nginx-debian/","publishdate":"2020-10-09T00:00:00Z","relpermalink":"/post/nginx-debian/","section":"post","summary":"Add Header Using the Nginx add_header directive can lead to duplicate header entries.\nConsider the following configuration file:\nserver { ... location = /ok { add_header Content-Type application/json; return 200 '{\u0026quot;result\u0026quot;:\u0026quot;ok\u0026quot;}'; } }  For me this resulted in the following response:","tags":["Debian","Linux","Nginx"],"title":"How to Set Response Headers in Nginx on Debian","type":"post"},{"authors":null,"categories":null,"content":"Update Update the current system.\n$ sudo zypper refresh\nRepository 'MEGAsync' is up to date. Repository 'Packman Repository' is up to date. Repository 'openSUSE-Leap-15.1-1' is up to date. Repository 'Online updates for openSUSE Leap:15.1 (standard)' is up to date. Repository 'Non-OSS Repository' is up to date. Repository 'Main Repository' is up to date. Repository 'Main Update Repository' is up to date. Repository 'Update Repository (Non-Oss)' is up to date. Repository 'snappy' is up to date. Repository 'Sublime Text - x86_64 - Stable' is up to date. All repositories have been refreshed.  $ sudo zypper update\nLoading repository data... Reading installed packages... Nothing to do.  Repo Add the new repository.\n$ sudo zypper addrepo http://widehat.opensuse.org/repositories/mozilla/openSUSE_Leap_15.1/ mozilla\nRecommends Install new recommended packages (install-new-recommends).\n$ sudo zypper inr\nLoading repository data... Reading installed packages... Resolving package dependencies... The following 5 NEW packages are going to be installed: MozillaFirefox-translations-common inxi perl-Cpanel-JSON-XS perl-XML-Dumper sensors Checking for file conflicts: .........................................................................................[done] (1/5) Installing: perl-Cpanel-JSON-XS-4.02-lp151.2.3.x86_64 ..........................................................[done] (2/5) Installing: perl-XML-Dumper-0.81-lp151.2.1.x86_64 ..............................................................[done] (3/5) Installing: MozillaFirefox-translations-common-68.8.0-lp151.2.45.1.x86_64 ......................................[done] (4/5) Installing: sensors-3.5.0-lp151.4.3.1.x86_64 ...................................................................[done] (5/5) Installing: inxi-3.1.00-lp151.3.6.1.noarch .....................................................................[done]  Allow Vendor Change Allow installs to change the locked-in vendor.\n$ sudo zypper dup --allow-vendor-change\nLoading repository data... Reading installed packages... Warning: You are about to do a distribution upgrade with all enabled repositories. Make sure these repositories are compatible before you continue. See 'man zypper' for more information about this command. Computing distribution upgrade... The following 10 packages are going to be upgraded: MozillaThunderbird kmozillahelper libfreebl3 libfreebl3-hmac libsoftokn3 libsoftokn3-hmac mozilla-nspr mozilla-nss mozilla-nss-certs youtube-dl-bash-completion The following 10 packages are going to be downgraded: ffmpeg-3 libavcodec57 libavdevice57 libavfilter6 libavformat57 libavresample3 libavutil55 libpostproc54 libswresample2 libswscale4 The following 10 packages are going to change vendor: MozillaThunderbird openSUSE -\u0026gt; obs://build.opensuse.org/mozilla kmozillahelper openSUSE -\u0026gt; obs://build.opensuse.org/mozilla libfreebl3 openSUSE -\u0026gt; obs://build.opensuse.org/mozilla libfreebl3-hmac openSUSE -\u0026gt; obs://build.opensuse.org/mozilla libsoftokn3 openSUSE -\u0026gt; obs://build.opensuse.org/mozilla libsoftokn3-hmac openSUSE -\u0026gt; obs://build.opensuse.org/mozilla mozilla-nspr openSUSE -\u0026gt; obs://build.opensuse.org/mozilla mozilla-nss openSUSE -\u0026gt; obs://build.opensuse.org/mozilla mozilla-nss-certs openSUSE -\u0026gt; obs://build.opensuse.org/mozilla youtube-dl-bash-completion openSUSE -\u0026gt; http://packman.links2linux.de 10 packages to upgrade, 10 to downgrade, 10 to change vendor. Overall download size: 57.8 MiB. Already cached: 0 B. After the operation, additional 176.2 KiB will be used. Continue? [y/n/v/...? shows all options] (y): Checking for file conflicts: .........................................................................................[done] ( 1/20) Installing: youtube-dl-bash-completion-2020.05.29-pm151.1.1.noarch ...........................................[done] ( 2/20) Installing: libavutil55-3.4.5-pm151.4.5.x86_64 ...............................................................[done] ( 3/20) Installing: libswscale4-3.4.5-pm151.4.5.x86_64 ...............................................................[done] ( 4/20) Installing: libswresample2-3.4.5-pm151.4.5.x86_64 ............................................................[done] ( 5/20) Installing: libpostproc54-3.4.5-pm151.4.5.x86_64 .............................................................[done] ( 6/20) Installing: libavresample3-3.4.5-pm151.4.5.x86_64 ............................................................[done] ( 7/20) Installing: libavcodec57-3.4.5-pm151.4.5.x86_64 ..............................................................[done] ( 8/20) Installing: libavformat57-3.4.5-pm151.4.5.x86_64 .............................................................[done] ( 9/20) Installing: libavfilter6-3.4.5-pm151.4.5.x86_64 ..............................................................[done] (10/20) Installing: libavdevice57-3.4.5-pm151.4.5.x86_64 .............................................................[done] (11/20) Installing: ffmpeg-3-3.4.5-pm151.4.5.x86_64 ..................................................................[done] (12/20) Installing: libfreebl3-3.52.1-lp151.1.1.x86_64 ...............................................................[done] (13/20) Installing: mozilla-nspr-4.25-lp151.1.1.x86_64 ...............................................................[done] (14/20) Installing: libfreebl3-hmac-3.52.1-lp151.1.1.x86_64 ..........................................................[done] (15/20) Installing: mozilla-nss-certs-3.52.1-lp151.1.1.x86_64 ........................................................[done] (16/20) Installing: libsoftokn3-3.52.1-lp151.1.1.x86_64 ..............................................................[done] (17/20) Installing: mozilla-nss-3.52.1-lp151.1.1.x86_64 ..............................................................[done] (18/20) Installing: libsoftokn3-hmac-3.52.1-lp151.1.1.x86_64 .........................................................[done] (19/20) Installing: MozillaThunderbird-68.8.1-lp151.1.1.x86_64 .......................................................[done] (20/20) Installing: kmozillahelper-5.0.5-lp151.12.1.x86_64 ...........................................................[done]  Install Firefox $ zypper install MozillaFirefox\nTaken from addictivetips.com.\n","date":1590969600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590969600,"objectID":"ccc6d9cff546e0831889e870bd24fa9e","permalink":"https://example.com/post/suse-firefox/","publishdate":"2020-06-01T00:00:00Z","relpermalink":"/post/suse-firefox/","section":"post","summary":"Update Update the current system.\n$ sudo zypper refresh\nRepository 'MEGAsync' is up to date. Repository 'Packman Repository' is up to date. Repository 'openSUSE-Leap-15.1-1' is up to date. Repository 'Online updates for openSUSE Leap:15.","tags":["SUSE","Linux"],"title":"How to Install the latest Firefox on Suse","type":"post"},{"authors":null,"categories":null,"content":" This guide serves as a reminder for me when I go to install SUSE again. I am not going to show how to install it, that is available all over the net. What I will describe is what I did after install to get my workstation back up and running with what I need to do JavaScript and Python development.\n  My system    Asus x86_64 Grub2 Kernel 4.12 openSUSE Leap 15.1 KDE 5.55 Plasma 5.12  Table of Contents  Pre-Install Install Post-Install  Update Hostname   Konsole   ! Scripts   System Monitor   Firefox   Keys   Hugo   Sublime Text   Sublime Merge   Development   Codecs   Bash   Snap   Applications   Node   Previous Installs    Pre-Install Note: You are going to have to backup your current files to another partition like I did or you could use an external drive or USB stick. I keep my console files in a GitHub repo, see Bash below.\nThe main things I backed up were:\n ~/bin/ ~/.config/sublime-text-3/Packages/User/ ~/.hgrc ~/.s3cfg ~/.gitconfig ~/.scrapinghub.yml  Install enable sshd open ssh port  Post-Install Here is my list of things I had to do to after the install to get up and running with a fresh SUSE.\n$ cat /etc/os-release PRETTY_NAME=\u0026quot;openSUSE Leap 15.1\u0026quot;  Update First update SUSE with any recent security fixes\n$ sudo zypper refresh $ sudo zypper update  Hostname $ sudo vim /etc/hostname varan $ sudo vim /etc/hosts 127.0.0.1 localhost 127.0.0.1 varan 104.237.140.142 cowboy    Konsole do not show menu by default\n  ! Scripts Restore ~/bin/\n  System Monitor Came pre-installed with KDE System Monitor (ksysguard 5.12.8)\n  Firefox Use dark theme\nabout:addons -\u0026gt; Themes  Update search engine to Duck Duck Go:\nabout:preferences#search -\u0026gt; Default Search Engine  Do not warn when closing multiple tabs:\nabout:config Search: \u0026quot;browser.tabs.warn\u0026quot; browser.tabs.warnOnClose `false` browser.tabs.warnOnCloseOtherTabs `false`    Keys Install ssh keys\nGenerate https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\n$ ssh-keygen -t rsa -b 4096 -C \u0026quot;stav@varan\u0026quot; $ eval \u0026quot;$(ssh-agent -s)\u0026quot; $ ssh-add ~/.ssh/id_rsa $ cat ~/.ssh/id_rsa.pub | ssh stav@cowboy 'cat \u0026gt;\u0026gt; ~/.ssh/authorized_keys'  Manually copy contents of ~/.ssh/id_rsa.pub to GitHub \u0026amp; Bitbucket.\nGitHub     https://github.com/settings/keys https://help.github.com/en/articles/adding-a-new-ssh-key-to-your-github-account  BitBucket     https://bitbucket.org/account/user/stav/ssh-keys/  Cowboy    Authorize user in VPN:\n$ cat ~/.ssh/id_rsa.pub | ssh stav@cowboy 'cat \u0026gt;\u0026gt; ~/.ssh/authorized_keys'  Setup git repos:\n$ /srv/git/almeroth.git$ git init --bare    Hugo It\u0026rsquo;s good to update this document as I\u0026rsquo;m installing.\nClone Repository $ git clone git@github.com:stav/steven.michael.git ~/Public $ git submodule update --init --recursive  Instal Hugo Extended Version The Academic theme needs the extended version.\nIf you run Hugo but get an error like this:\n$ hugo Building sites ERROR: failed to transform resource: TOCSS: failed to transform \u0026quot;main_parsed.scss\u0026quot; (text/x-scss): this feature is not available in your current Hugo version, see https://goo.gl/YMrWcn  then you need the extended version.\nDownload and extract the Hugo extended version, see Assets (hugo_extended_0.64.0_Linux-64bit.tar.gz).\n$ sudo cp /home/stav/Downloads/hugo /usr/local/bin    Sublime Text Sublime Text is an excellent editor.\nInstall $ sudo rpm -v --import https://download.sublimetext.com/sublimehq-rpm-pub.gpg $ sudo zypper addrepo -g -f https://download.sublimetext.com/rpm/stable/x86_64/sublime-text.repo $ sudo zypper update $ sudo zypper install sublime-text  License Add under help menu.\n----- BEGIN LICENSE ----- Steven Almeroth Single User License EA7E-... 104B ------ END LICENSE ------  Package Control You want Package Control from wbond.\nInstall Package Control Command Pallate (shft-ctrl-p) -\u0026gt; Install Package Control\nInstall packages Restore the following file from your backup and Package Control will automatically install all missing packages:\n  ~/.config/sublime-text-3/Packages/User/Package Control.sublime-settings\n \u0026quot;installed_packages\u0026quot;: [ \u0026quot;Anaconda\u0026quot;, \u0026quot;GitGutter\u0026quot;, \u0026quot;Hugofy\u0026quot;, \u0026quot;INI\u0026quot;, \u0026quot;Package Control\u0026quot;, \u0026quot;Pretty JSON\u0026quot;, \u0026quot;Python Pretty Print\u0026quot;, \u0026quot;Theme - SoDaReloaded\u0026quot;, \u0026quot;TrailingSpaces\u0026quot;, \u0026quot;Vue Syntax Highlight\u0026quot; ]    Then restart SublimeText.\nCopy Files Copy remaining backup files to ~/.config/sublime-text-3/Packages/User/\nDo not copy these:\n User/Package Control.cache/ User/Package Control.last-run User/Package Control.merged-ca-bundle User/Package Control.user-ca-bundle    Sublime Merge I also now use Sublime Merge from the same people.\nInstall $ sudo rpm -v --import https://download.sublimetext.com/sublimehq-rpm-pub.gpg $ sudo zypper addrepo -g -f https://download.sublimetext.com/rpm/stable/x86_64/sublime-text.repo $ sudo zypper install sublime-merge    Development sudo zypper in git-core meld sudo ln -s /usr/bin/python3 /usr/bin/python    Codecs sudo zypper addrepo -f http://packman.inode.at/suse/openSUSE_Leap_15.1/ packman sudo zypper addrepo -f http://opensuse-guide.org/repo/openSUSE_Leap_15.1/ dvd sudo zypper install --allow-vendor-change ffmpeg lame gstreamer-plugins-bad gstreamer-plugins-ugly gstreamer-plugins-ugly-orig-addon gstreamer-plugins-libav libavdevice56 libavdevice58 libdvdcss2 vlc-codecs sudo zypper dup --allow-vendor-change --from http://packman.inode.at/suse/openSUSE_Leap_15.1/    Bash $ git clone git@github.com:stav/dotbash.git ~/.bash  Install bash_it $ git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it $ ~/.bash_it/install.sh # keep existing `.bashrc` and append templates (y)  Install Powerline theme https://github.com/Bash-it/bash-it/tree/master/themes/powerline\n$ mkdir ~/Public/powerline $ cd ~/Public/powerline $ git clone --depth=1 https://github.com/powerline/fonts.git $ ./fonts/install.sh $ wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf $ wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf $ mv PowerlineSymbols.otf ~/.local/share/fonts/ $ fc-cache -vf ~/.local/share/fonts/ $ mkdir -p ~/.config/fontconfig/conf.d/ $ mv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/  Close all Terminal instances\nCopy files .bash_projects .bash-it.bash .bashrc  Link files for editor reference stav@thelatae:~$ ll .bash_links/ .bash-it.bash -\u0026gt; /home/stav/.bash-it.bash .bash_projects -\u0026gt; /home/stav/.bash_projects .bashrc -\u0026gt; /home/stav/.bashrc    Snap $ sudo zypper addrepo --refresh https://download.opensuse.org/repositories/system:/snappy/openSUSE_Leap_15.0 snappy $ sudo zypper --gpg-auto-import-keys refresh $ sudo zypper dup --from snappy $ sudo zypper install snapd $ sudo systemctl enable snapd $ sudo systemctl start snapd $ sudo snap install snap-store    Applications $ sudo zypper install gimp mpv $ sudo snap install brave bluemail telegram-desktop    Node We don\u0026rsquo;t install from vendor packages because they are only on version 10 and we want 12.\nInstall nvm    wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash  Now use nvm to install node:\n$ nvm ls-remote |grep Latest v4.9.1 (Latest LTS: Argon) v6.17.1 (Latest LTS: Boron) v8.17.0 (Latest LTS: Carbon) v10.19.0 (Latest LTS: Dubnium) v12.15.0 (Latest LTS: Erbium) $ nvm install 12.15.0 Downloading and installing node v12.15.0 $ node -v v12.15.0 $ npm version { npm: '6.13.4', ares: '1.15.0', brotli: '1.0.7', cldr: '35.1', http_parser: '2.9.3', icu: '64.2', llhttp: '2.0.4', modules: '72', napi: '5', nghttp2: '1.40.0', node: '12.15.0', openssl: '1.1.1d', tz: '2019c', unicode: '12.1', uv: '1.33.1', v8: '7.7.299.13-node.16', zlib: '1.2.11' }    Previous Installs I previously installed some other stuff:\n Ubuntu 19.10 Ubuntu 19.04 Ubuntu 18.10 Ubuntu 17.10 Ubuntu 17.04 Ubuntu 16.04  ","date":1581120000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581120000,"objectID":"9a5f98f8c04e2b0ae3788cca7932db08","permalink":"https://example.com/post/suse-15.1/","publishdate":"2020-02-08T00:00:00Z","relpermalink":"/post/suse-15.1/","section":"post","summary":"This guide serves as a reminder for me when I go to install SUSE again. I am not going to show how to install it, that is available all over the net.","tags":["Suse","Linux"],"title":"What to do after installing openSUSE Leap 15.1","type":"post"},{"authors":null,"categories":null,"content":" This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net. What I will describe is what I did after install to get my workstation back up and running with what I need to do Python development.\n  For me, a sub-average long-time software developer, Ubuntu is a great operating system. Canonical, the company who releases Ubuntu, does so every six months, in April and October; therefore, version 19.04 was released in April 2019.\n My system Asus x86_64 Grub GNU Debian Ubuntu 19.10 Eoan Ermine  Normally I like to install every new Ubuntu release for the following reasons:\n  I remove all the cruft I have gathered, notice I said \u0026ldquo;install\u0026rdquo;, not \u0026ldquo;upgrade\u0026rdquo;,\n  new features available.\n  Table of Contents  Pre-Install Post-Install  Update Tools System Monitor Firefox Sublime Text Sublime Merge Keys Git Bash Hugo Communication Development Applications   Previous Installs    Pre-Install Note: You are going to have to backup your current files to another partition like I did or you could use an external drive or USB stick. I keep my Bash files in a GitHub repo, see Bash below.\nThe main things I backed up were:\n ~/bin/ ~/.config/sublime-text-3/Packages/User/ ~/.ssh/config ~/.gitconfig ~/.hgrc ~/.s3cfg  Post-Install Here is my list of things I had to do to after the install to get up and running with a fresh Ubuntu.\nUpdate First update Ubuntu with any recent security fixes\n$ sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade  Tools $ sudo apt install curl htop vim gnome-tweak-tool  Restore ~/bin/\nSystem Monitor I love to have system info in the Top Panel so that I can alway have a quick glance at cpu usage and network traffic; but, my beloved indicator-multiload applet no longer works on recent version of Ubuntu.\nSo now I switched to an extension/applet called [Gnome Shell System Monitor] (https://github.com/paradoxxxzero/gnome-shell-system-monitor-applet):\n$ gnome-shell --version GNOME Shell 3.34.1 $ sudo apt install gir1.2-gtop-2.0 gir1.2-nm-1.0 gir1.2-clutter-1.0 $ sudo apt install chrome-gnome-shell  Then go to the Extension page and click the \u0026ldquo;ON\u0026rdquo; switch\nFirefox Use dark theme\nabout:addons -\u0026gt; Themes  Update search engine to Duck Duck Go:\nabout:preferences#search -\u0026gt; Default Search Engine  Do not warn when closing multiple tabs:\nabout:config Search: \u0026quot;browser.tabs.warn\u0026quot; browser.tabs.warnOnClose `false` browser.tabs.warnOnCloseOtherTabs `false`  Sublime Text Sublime Text is an excellent editor.\nInstall $ sudo snap install sublime-text  License Add under help menu.\n----- BEGIN LICENSE ----- Steven Almeroth Single User License EA7E-... 104B ------ END LICENSE ------  Package Control You want Package Control from wbond.\nInstall Package Control Command Pallate (shft-ctrl-p) -\u0026gt; Install Package Control\nInstall packages Restore the following file from your backup and Package Control will automatically install all missing packages:\n  ~/.config/sublime-text-3/Packages/User/Package Control.sublime-settings\n \u0026quot;installed_packages\u0026quot;: [ \u0026quot;Anaconda\u0026quot;, \u0026quot;GitGutter\u0026quot;, \u0026quot;Hugofy\u0026quot;, \u0026quot;INI\u0026quot;, \u0026quot;Package Control\u0026quot;, \u0026quot;Pretty JSON\u0026quot;, \u0026quot;Python Pretty Print\u0026quot;, \u0026quot;Theme - SoDaReloaded\u0026quot;, \u0026quot;TrailingSpaces\u0026quot;, \u0026quot;Vue Syntax Highlight\u0026quot; ]    Then restart SublimeText.\nCopy Files Copy remaining backup files to ~/.config/sublime-text-3/Packages/User/\nDo not copy these files:\n User/Package Control.last-run User/Package Control.merged-ca-bundle User/Package Control.user-ca-bundle  Sublime Merge I also now use Sublime Merge from the same people.\nInstall https://www.sublimemerge.com/docs/linux_repositories\nKeys Install ssh keys\nGenerate https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\n$ ssh-keygen -t rsa -b 4096 -C \u0026quot;stav@maximillion\u0026quot; $ eval \u0026quot;$(ssh-agent -s)\u0026quot; $ ssh-add ~/.ssh/id_rsa $ sudo apt-get install xclip $ xclip -sel clip \u0026lt; ~/.ssh/id_rsa.pub  GitHub  https://help.github.com/en/articles/adding-a-new-ssh-key-to-your-github-account https://github.com/settings/keys  BitBucket  https://bitbucket.org/account/user/stav/ssh-keys/  Cowboy $ cat ~/.ssh/id_rsa.pub | ssh stav@cowboy 'cat \u0026gt;\u0026gt; ~/.ssh/authorized_keys'  Git $ sudo apt-get install git git-extras gitg meld tree  Bash $ git clone git@github.com:stav/dotbash.git ~/.bash  Install bash_it $ git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it $ ~/.bash_it/install.sh # keep existing `.bashrc` and append templates  Install Powerline theme https://github.com/Bash-it/bash-it/tree/master/themes/powerline\n$ mkdir ~/Public/powerline $ cd ~/Public/powerline $ git clone --depth=1 https://github.com/powerline/fonts.git $ ./fonts/install.sh $ wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf $ wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf $ mv PowerlineSymbols.otf ~/.local/share/fonts/ $ fc-cache -vf ~/.local/share/fonts/ $ mkdir -p ~/.config/fontconfig/conf.d/ $ mv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/  Close all Terminal instances\nCopy files .bash_projects .bash-it.bash .bashrc  Link files for editor reference stav@thelatae:~$ ll .bash_links/ .bash-it.bash -\u0026gt; /home/stav/.bash-it.bash .bash_projects -\u0026gt; /home/stav/.bash_projects .bashrc -\u0026gt; /home/stav/.bashrc  Hugo It\u0026rsquo;s good to update this document as I\u0026rsquo;m installing.\nInstal Hugo The default installation did not work:\n$ sudo snap install hugo  Running the command got an error:\n$ hugo Building sites ERROR: failed to transform resource: TOCSS: failed to transform \u0026quot;main_parsed.scss\u0026quot; (text/x-scss): this feature is not available in your current Hugo version, see https://goo.gl/YMrWcn  So I installed the [extended version] (https://github.com/gohugoio/hugo/releases).\nClone Repository $ mkdir -p ~/Work/stav/Hugo $ git clone git@github.com:stav/steven.michael.git ~/Work/stav/Hugo/steven.michael $ git submodule update --init --recursive  Communication $ sudo snap install bluemail telegram-desktop  Development $ sudo apt install build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev zlib1g-dev libssl-dev openssl libgdbm-dev libgdbm-compat-dev liblzma-dev libreadline-dev libncursesw5-dev libffi-dev uuid-dev $ sudo apt install python3-pip python3-venv virtualenvwrapper $ sudo apt install git git-extras meld tree $ python3 Python 3.7.5 (Nov 20 2019)  Applications $ sudo apt install chromium-browser gimp # sudo add-apt-repository ppa:mc3man/mpv-tests # sudo apt-get install mpv  Previous Installs I previously installed some other stuff:\n 19.04 18.10 17.10 17.04 16.04  ","date":1579737600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579737600,"objectID":"10ebd6bde29fe13a7147ceafffd24726","permalink":"https://example.com/post/ubuntu-1910/","publishdate":"2020-01-23T00:00:00Z","relpermalink":"/post/ubuntu-1910/","section":"post","summary":"This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net.","tags":["Ubuntu","Linux"],"title":"What to do after installing Ubuntu 19.10","type":"post"},{"authors":null,"categories":null,"content":" This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net. What I will describe is what I did after install to get my workstation back up and running with what I need to do Python development.\n  For me, a sub-average long-time software developer, Ubuntu is a great operating system. Canonical, the company who releases Ubuntu, does so every six months, in April and October; therefore, version 19.04 was released in April 2019.\n My system Lenovo Yogo 2 Pro x86_64 Grub GNU Debian Ubuntu 19.04 Disco Dingo  Normally I like to install every new Ubuntu release for the following reasons:\n  I remove all the cruft I have gathered, notice I said \u0026ldquo;install\u0026rdquo;, not \u0026ldquo;upgrade\u0026rdquo;,\n  new features available.\n  Table of Contents  Partitions Pre-Install Post-Install  Update Terminal Tools System Monitor Firefox Sublime Text Sublime Merge Keys Git Bash Hugo Slack E-mail Development Applications System config   Previous Installs    Partitions Partition information is important when using a custom install.\n$ sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL NAME FSTYPE SIZE MOUNTPOINT LABEL sda 238.5G ├─sda1 vfat 477M WINY ├─sda2 swap 8.4G ├─sda3 ext4 28G / ├─sda4 ext4 51G ├─sda5 ext4 81.7G Meadow ├─sda6 ntfs 4G LENOVO ├─sda7 vfat 250M /boot/efi BOOT └─sda10 ext4 61.8G Distroer  Pre-Install Note: You are going to have to backup your current files to another partition like I did or you could use an external drive or USB stick. I keep my Bash files in a GitHub repo, see Bash below.\nThe main things I backed up were:\n ~/bin/ ~/.bash_links/ ~/.config/sublime-text-3/Packages/User/ ~/.ssh/config ~/.gitconfig ~/.hgrc ~/.s3cfg ~/.scrapinghub.yml Gramps dconf dump /org/gnome/terminal/ \u0026gt; gnome_terminal_settings_backup # https://askubuntu.com/questions/967517#967535 cp ~/.bash_links/* -L * /media/stav/Meadow/xenix  Post-Install Here is my list of things I had to do to after the install to get up and running with a fresh Ubuntu.\nUpdate First update Ubuntu with any recent security fixes\n$ sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade  Terminal Reload backup settings.\nhttps://askubuntu.com/questions/967517#967535\n$ cp ~/.config/dconf/user /tmp # backup $ dconf reset -f /org/gnome/terminal/ $ dconf load /org/gnome/terminal/ \u0026lt; gnome_terminal_settings_backup  Tools $ sudo apt install curl htop vim gnome-tweak-tool  Restore ~/bin/\nSystem Monitor I love to have system info in the Top Panel so that I can alway have a quick glance at cpu usage and network traffic; but, my beloved indicator-multiload applet no longer works on recent version of Ubuntu.\nSo now I switched to an extension/applet called [Gnome Shell System Monitor] (https://github.com/paradoxxxzero/gnome-shell-system-monitor-applet):\n$ gnome-shell --version GNOME Shell 3.32.0 $ sudo apt install gir1.2-gtop-2.0 gir1.2-networkmanager-1.0 gir1.2-clutter-1.0 $ sudo apt install chrome-gnome-shell  Then go to the Extension page and click the \u0026ldquo;ON\u0026rdquo; switch\nFirefox Use dark theme\nabout:addons -\u0026gt; Themes  Update search engine to Duck Duck Go:\nabout:preferences#search -\u0026gt; Default Search Engine  Do not warn when closing multiple tabs:\nabout:config Search: \u0026quot;browser.tabs.warn\u0026quot; browser.tabs.warnOnClose `false` browser.tabs.warnOnCloseOtherTabs `false`  Sublime Text Sublime Text is an excellent editor.\nInstall $ sudo snap install sublime-text  License Add under help menu.\n----- BEGIN LICENSE ----- Steven Almeroth Single User License EA7E-... 104B ------ END LICENSE ------  Package Control You want Package Control from wbond.\nInstall Package Control Command Pallate (shft-ctrl-p) -\u0026gt; Install Package Control\nInstall packages Restore the following file from your backup and Package Control will automatically install all missing packages:\n  ~/.config/sublime-text-3/Packages/User/Package Control.sublime-settings\n \u0026quot;installed_packages\u0026quot;: [ \u0026quot;Anaconda\u0026quot;, \u0026quot;GitGutter\u0026quot;, \u0026quot;Hugofy\u0026quot;, \u0026quot;INI\u0026quot;, \u0026quot;Package Control\u0026quot;, \u0026quot;Pretty JSON\u0026quot;, \u0026quot;Python Pretty Print\u0026quot;, \u0026quot;Theme - SoDaReloaded\u0026quot;, \u0026quot;TrailingSpaces\u0026quot;, \u0026quot;Vue Syntax Highlight\u0026quot; ]    Copy Files Copy remaining backup files to ~/.config/sublime-text-3/Packages/User/\nDo not copy these files:\n User/Package Control.last-run User/Package Control.merged-ca-bundle User/Package Control.user-ca-bundle  Sublime Merge I also now use Sublime Merge from the same people.\nInstall https://www.sublimemerge.com/docs/linux_repositories\nKeys Install ssh keys\nGenerate https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\n$ ssh-keygen -t rsa -b 4096 -C \u0026quot;stav@maximillion\u0026quot; $ eval \u0026quot;$(ssh-agent -s)\u0026quot; $ ssh-add ~/.ssh/id_rsa $ sudo apt-get install xclip $ xclip -sel clip \u0026lt; ~/.ssh/id_rsa.pub  GitHub  https://help.github.com/en/articles/adding-a-new-ssh-key-to-your-github-account https://github.com/settings/keys  BitBucket  https://bitbucket.org/account/user/stav/ssh-keys/  Cowboy $ cat ~/.ssh/id_rsa.pub | ssh stav@cowboy 'cat \u0026gt;\u0026gt; ~/.ssh/authorized_keys'  Git $ sudo apt-get install git git-extras gitg meld tree $ sublime merge https://www.sublimemerge.com/docs/linux_repositories#apt  Bash $ git clone git@github.com:stav/dotbash.git ~/.bash  Install bash_it $ git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it $ ~/.bash_it/install.sh # keep existing `.bashrc` and append templates  Install Powerline theme https://github.com/Bash-it/bash-it/tree/master/themes/powerline\n$ mkdir ~/Public/powerline $ cd ~/Public/powerline $ git clone --depth=1 https://github.com/powerline/fonts.git $ ./fonts/install.sh $ wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf $ wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf $ mv PowerlineSymbols.otf ~/.local/share/fonts/ $ fc-cache -vf ~/.local/share/fonts/ $ mkdir -p ~/.config/fontconfig/conf.d/ $ mv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/  Close all Terminal instances\nCopy files .bash_projects .bash-it.bash .bashrc  Link files for editor reference stav@thelatae:~$ ll .bash_links/ .bash-it.bash -\u0026gt; /home/stav/.bash-it.bash .bash_projects -\u0026gt; /home/stav/.bash_projects .bashrc -\u0026gt; /home/stav/.bashrc  Hugo It\u0026rsquo;s good to update this document as I\u0026rsquo;m installing.\nInstal Hugo The default installation did not work:\n$ sudo snap install hugo  Running the command got an error:\n$ hugo Building sites ERROR 2019/05/07 18:29:45 error: failed to transform resource: TOCSS: failed to transform \u0026quot;main_parsed.scss\u0026quot; (text/x-scss): this feature is not available in your current Hugo version, see https://goo.gl/YMrWcn  So I installed the [extended version] (https://github.com/gohugoio/hugo/releases/download/v0.55.5/hugo_extended_0.55.5_Linux-64bit.deb).\nClone Repository $ mkdir -p ~/Work/stav/Hugo $ git clone git@github.com:stav/steven.michael.git ~/Work/stav/Hugo/steven.michael $ git submodule update --init --recursive  Slack $ sudo snap install slack --classic  E-mail Add settings in Thunderbird setup\nDevelopment $ sudo apt install build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev zlib1g-dev libssl-dev openssl libgdbm-dev libgdbm-compat-dev liblzma-dev libreadline-dev libncursesw5-dev libffi-dev uuid-dev $ sudo apt install python3-pip python3-venv virtualenvwrapper $ sudo apt install git git-extras meld tree $ python3 Python 3.7.3 (default, Apr 3 2019, 05:39:12)  Poetry Based on an article I read about what Nathaniel Smith posted in his blog, I had a bad taste in my mouth when I thought about using Pipenv as the package management system for a new project; so; I went to look for something else and that is when I read what Sébastien Eustace said about Pipenv:\n \u0026ldquo;I do not like the CLI it provides, or some of the decisions made\u0026rdquo;\n Since Poetry makes use of pyproject.toml files I thought I\u0026rsquo;d give it a go.\n \u0026ldquo;Poetry is a tool for dependency management and packaging in Python\u0026rdquo;\n Installation:\n$ curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python  Node Install nvm https://github.com/creationix/nvm/blob/master/README.md#installation\nThis will update your .bashrc\n$ wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash  Open a new terminal, or else you can setup the environment variable manually which the installer will explain how to do.\n$ nvm --version 0.34.0  Install node $ nvm ls-remote |tail v11.15.0 v12.3.0 v12.3.1 $ nvm install 12 --latest-npm Downloading and installing node v12.3.1... Downloading https://nodejs.org/dist/v12.3.1/node-v12.3.1-linux-x64.tar.xz... Computing checksum with sha256sum Checksums matched! Now using node v12.3.1 (npm v6.9.0) Creating default alias: default -\u0026gt; 12 (-\u0026gt; v12.3.1)  $ node -v v12.3.1 $ npm -v 6.9.0  Install yarn https://yarnpkg.com/en/docs/install#debian\n$ curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - $ echo \u0026quot;deb https://dl.yarnpkg.com/debian/ stable main\u0026quot; | sudo tee /etc/apt/sources.list.d/yarn.list $ sudo apt-get update \u0026amp;\u0026amp; sudo apt-get install --no-install-recommends yarn  $ yarn -v 1.16.0  Applications $ sudo apt install chromium-browser gimp mpv  System config See Lenovo Yoga Ultrabook SSD Tweaks\nPrevious Installs I previously installed some other stuff:\n 18.10 17.10 17.04 16.04  ","date":1557187200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557187200,"objectID":"32eb7ee7a61a12e0370941842274eaca","permalink":"https://example.com/post/ubuntu-1904/","publishdate":"2019-05-07T00:00:00Z","relpermalink":"/post/ubuntu-1904/","section":"post","summary":"This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net.","tags":["Ubuntu","Linux"],"title":"What to do after installing Ubuntu 19.04","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  **Two**  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":" This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net. What I will describe is what I did after install to get my workstation back up and running with what I need to do Python development.\n  For me, a sub-average long-time software developer, Ubuntu is a great operating system. Canonical, the company who releases Ubuntu, does so every six months, in April and October; therefore, version 18.10 was released in October 2018.\n My system Lenovo Yogo 2 Pro x86_64 Grub GNU Debian Ubuntu 18.10 Cosmic Cuttlefish  Normally I like to install every new Ubuntu release for the following reasons:\n  I remove all the cruft I have gathered, notice I said \u0026ldquo;install\u0026rdquo;, not \u0026ldquo;upgrade\u0026rdquo;,\n  new features available.\n  Table of Contents  Partitions Pre-Install Post-Install  Update Tools Network System Monitor Firefox Sublime Text Sublime Merge Slack E-mail Development SSH keys Hugo Terminal Bash Applications System config   Previous Installs    Partitions Partition information is important when using a custom install.\n$ sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL NAME FSTYPE SIZE MOUNTPOINT LABEL sda 238.5G ├─sda1 vfat 477M WINY ├─sda2 swap 8.4G [SWAP] ├─sda3 ext4 28G / ├─sda4 ext4 51G /home ├─sda5 ext4 81.7G Meadow ├─sda6 ntfs 4G LENOVO ├─sda7 vfat 250M /boot/efi BOOT └─sda10 ext4 61.8G Distroer  Pre-Install Note: You are going to have to backup your current files to another partition like I did or you could use an external drive or USB stick. I keep my bash files in a GitHub repo, see [Dotfiles] below.\nThe main things I backed up were:\n ~/bin/ ~/.bash_links/ ~/.config/sublime-text-3/Packages/User/ ~/.ssh/config ~/.gitconfig ~/.hgrc ~/.s3cfg ~/.scrapinghub.yml /etc/hosts bookmarks Evolution Gramps dconf dump /org/gnome/terminal/ \u0026gt; gnome_terminal_settings_backup # https://askubuntu.com/questions/967517#967535 cp ~/.bash_links/* -L * /media/stav/Meadow/xenix  Post-Install Here is my list of things I had to do to after the install to get up and running with a fresh Ubuntu.\nUpdate First update Ubuntu with any recent security fixes\nsudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade  Tools sudo apt install curl htop vim gnome-tweak-tool  Restore ~/bin/\nNetwork Merge /etc/hosts\nSystem Monitor I love to have system info in the Top Panel so that I can alway have a quick glance at cpu usage and network traffic; but, my beloved indicator-multiload applet no longer works on recent version of Ubuntu.\nSo now I switched to an extension/applet called [Gnome Shell System Monitor] (https://github.com/paradoxxxzero/gnome-shell-system-monitor-applet). I installed: the system dependencies the browser extension and the host connector and then restarted Gnome; but, unfortunately Firefox could not detect the connector:\n Although GNOME Shell integration extension is running, native host connector is not detected\n So I had to download the tarball from Github and install manually which was really easy:\nmake install  Then run Gnome Tweak Tool and enable in Extensions.\nFirefox Use dark theme\nabout:addons -\u0026gt; Themes  Update search engine to Duck Duck Go:\nabout:preferences#search -\u0026gt; Default Search Engine  Do not warn when closing multiple tabs:\nabout:config  Search: \u0026ldquo;browser.tabs.warn\u0026rdquo;\nbrowser.tabs.warnOnClose `false` browser.tabs.warnOnCloseOtherTabs `false`  Sublime Text Sublime Text is an excellent editor.\nInstall wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - sudo apt-get install apt-transport-https echo \u0026quot;deb https://download.sublimetext.com/ apt/stable/\u0026quot; | sudo tee /etc/apt/sources.list.d/sublime-text.list sudo apt-get update sudo apt-get install sublime-text  Errors Note that when I tried to run it I got errors\n$ subl Unable to load libgdk-x11-2.0.so ....  So I installed this package\n$ sudo apt-get install libgtk2.0  License Add under help menu.\n----- BEGIN LICENSE ----- Steven Almeroth Single User License EA7E-... 104B ------ END LICENSE ------  Package Control You want Package Control from wbond.\nInstall Package Control Command Pallate (shft-ctrl-p) -\u0026gt; Install Package Control\nInstall packages Restore the following file from your backup and Package Control will automatically install all missing packages:\n  ~/.config/sublime-text-3/Packages/User/Package Control.sublime-settings\n \u0026quot;installed_packages\u0026quot;: [ \u0026quot;Anaconda\u0026quot;, \u0026quot;GitGutter\u0026quot;, \u0026quot;Hugofy\u0026quot;, \u0026quot;INI\u0026quot;, \u0026quot;Package Control\u0026quot;, \u0026quot;Pretty JSON\u0026quot;, \u0026quot;Python Pretty Print\u0026quot;, \u0026quot;Theme - SoDaReloaded\u0026quot;, \u0026quot;TrailingSpaces\u0026quot;, \u0026quot;Vue Syntax Highlight\u0026quot; ]    Copy Files Copy backup files to ~/.config/sublime-text-3/Packages/User/\nSublime Merge I also now use Sublime Merge from the same people.\nInstall https://www.sublimemerge.com/docs/linux_repositories\nSlack https://snapcraft.io/slack\nsudo snap install slack --classic # slack 3.3.3 from Slack✓ installed  E-mail Add settings in Thunderbird setup\nDevelopment sudo apt-get install build-essential checkinstall sudo apt-get install libglib2.0-dev libgtk2.0-dev libvte-dev sudo apt-get install git git-extras gitg meld tree sudo apt-get install python-pip python3-pip python3-venv virtualenvwrapper  $ python Python 2.7.15+ (default, Oct 2 2018, 22:12:08) $ python3 Python 3.6.7rc1 (default, Sep 27 2018, 09:51:25)  Pipenv https://pipenv.readthedocs.io/en/latest/install/#installing-pipenv\npip install --user pipenv  Note: after installing pipenv you will need to make sure that the user install location (~/.local/bin) is in the path, easiest way is to logout/login\nNode Install nvm https://github.com/creationix/nvm/blob/master/README.md#installation\nThis will update your .bashrc\n$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash  Open a new terminal, or else you can setup the environment variable manually which the installer will explain how to do.\n$ nvm --version 0.33.11  Install node $ nvm ls-remote |tail v10.11.0 v10.12.0 v11.0.0 $ nvm install 11 --latest-npm Downloading and installing node v11.0.0... Downloading https://nodejs.org/dist/v11.0.0/node-v11.0.0-linux-x64.tar.xz... Computing checksum with sha256sum Checksums matched! Now using node v11.0.0 (npm v6.4.1) Creating default alias: default -\u0026gt; 11 (-\u0026gt; v11.0.0)  SSH keys ssh-keygen -t rsa -b 4096 -C \u0026quot;stav@phinix\u0026quot; ssh-add ~/.ssh/id_rsa sudo apt-get install xclip xclip -sel clip \u0026lt; ~/.ssh/id_rsa.pub  Note that new keys will have to be uploaded to remotes:\n GitHub Bitbucket cowboy:~/.ssh/authorized_keys  Hugo It\u0026rsquo;s good to update this document as I\u0026rsquo;m installing.\nsudo snap install hugo mkdir -p ~/Work/stav/Hugo git clone git@github.com:stav/stav.linode.gen.git ~/Work/stav/Hugo/steven.michael git clone git@github.com:gcushen/hugo-academic.git /home/stav/Work/stav/Hugo/steven.michael/themes/academic  Terminal Reload backup settings.\nhttps://askubuntu.com/questions/967517#967535\ncp ~/.config/dconf/user /tmp # backup dconf reset -f /org/gnome/terminal/ dconf load /org/gnome/terminal/ \u0026lt; gnome_terminal_settings_backup  Bash git clone git@github.com:stav/dotbash.git ~/.bash  Install bash_it git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it ~/.bash_it/install.sh # keep existing `.bashrc` and append templates  Install Powerline theme https://github.com/Bash-it/bash-it/tree/master/themes/powerline\nmkdir ~/Public/powerline cd ~/Public/powerline git clone --depth=1 https://github.com/powerline/fonts.git ./fonts/install.sh wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf mv PowerlineSymbols.otf ~/.local/share/fonts/ fc-cache -vf ~/.local/share/fonts/ mkdir -p ~/.config/fontconfig/conf.d/ mv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/  Close all Terminal instances\nCopy files .bash_projects .bash-it.bash .bashrc  Link files for editor reference stav@thelatae:~$ ll .bash_links/ .bash-it.bash -\u0026gt; /home/stav/.bash-it.bash .bash_projects -\u0026gt; /home/stav/.bash_projects .bashrc -\u0026gt; /home/stav/.bashrc  Applications sudo apt-get install chromium-browser gimp mpv lynx elinks  System config See Lenovo Yoga Ultrabook SSD Tweaks\nPrevious Installs I previously installed some other stuff:\n 17.10 17.04 16.04  ","date":1540339200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1540339200,"objectID":"dfa2b303f9fa995195f78ee70f490b4f","permalink":"https://example.com/post/ubuntu-1810/","publishdate":"2018-10-24T00:00:00Z","relpermalink":"/post/ubuntu-1810/","section":"post","summary":"This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net.","tags":["Ubuntu","Linux"],"title":"What to do after installing Ubuntu 18.10","type":"post"},{"authors":null,"categories":null,"content":" This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net. What I will describe is what I did after install to get my workstation back up and running with what I need to do Python development.\n  For me, a sub-average long-time software developer, Ubuntu is a great operating system. Canonical, the company who releases Ubuntu, does so every six months, in April and October; therefore, version 17.10 was released in October 2017.\n My system Lenovo Yogo 2 Pro x86_64 Grub GNU Debian Ubuntu 17.10 Artful Gnome  Normally I like to install every new Ubuntu release for the following reasons:\n  I remove all the cruft I have gathered, notice I said \u0026ldquo;install\u0026rdquo;, not \u0026ldquo;upgrade\u0026rdquo;,\n  new features available.\n  Table of Contents  Partitions Comments Issues  Display MPV Indicators   Pre-Install Post-Install  Tools Network Firefox Sublime Text Slack E-mail Development SSH keys Hugo Terminal Bash Mega Applications System config Gnome Tweaks   Previous 17.04 installs  Archivers Media Database Cleaup Misc      Partitions Partition information is important when using a custom install.\n$ sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL NAME FSTYPE SIZE MOUNTPOINT LABEL sda 238.5G ├─sda1 vfat 477M WINY ├─sda2 swap 8.4G [SWAP] ├─sda3 ext4 28G / ├─sda4 ext4 51G /home ├─sda5 ext4 81.7G Meadow ├─sda6 ntfs 4G LENOVO ├─sda7 vfat 250M /boot/efi BOOT └─sda10 ext4 61.8G Distroer  Comments  Wayland the new default display server changed from X.org to Wayland  You can choose to use X.org during login by the little gear next to the login button.\n$ echo $XDG_SESSION_TYPE wayland   Meld nice dark syntax highlighting theme Oblivion  Issues In the latest release I found the following issues.\nDisplay The new Wayland display server prevents some things from running without escalated privileges:\n synaptic gparted  To get these to run you need to execute this command for every new session:\nxhost +si:localuser:root  MPV The great video app mpv 0.26.0 does not allow access via the mouse so I had to install a Gnome GTK front-end:\nsudo apt install gnome-mpv  Indicators The stop-gap system tray introduced in Gnome 3.16 was removed in 3.25 and now my beloved system-monitor and touchpad indicators no longer work.\nMultiload A system load indicator capable of displaying graphs for CPU, network traffic and more does not display properly.\nTouchpad An indicator to show the status of the touchpad, and to enable and disable the touchpad.\nsudo add-apt-repository ppa:atareao/atareao sudo apt-get update sudo apt-get install touchpad-indicator  Couldn\u0026rsquo;t get it working\nTouchpad-Indicator version: 1.1.0-0extras15.04.3-src Couldn't find synaptics properties. No synaptics driver loaded?  So for now I have to disable it manually. The first time I installed synclient worked:\nsynclient TouchpadOff=1  But the second time I installed it didn\u0026rsquo;t work so now I have to use gsettings:\n#!/bin/bash STATUS=`gsettings get org.gnome.desktop.peripherals.touchpad send-events` if [ \u0026quot;$STATUS\u0026quot; = \u0026quot;'enabled'\u0026quot; ] then STATUS=\u0026quot;'disabled'\u0026quot; else STATUS=\u0026quot;'enabled'\u0026quot; fi gsettings set org.gnome.desktop.peripherals.touchpad send-events $STATUS echo \u0026quot;Touchpad $STATUS\u0026quot;  Pre-Install Note: You are going to have to backup your current files to another partition like I did or you could use an external drive or USB stick. I keep my bash files in a GitHub repo, see Dotfiles below.\nThe main things I backed up were:\n ~/bin/ ~/.bash_links/ ~/.config/sublime-text-3/Packages/User/ ~/.ssh/config ~/.gitconfig ~/.hgrc ~/.s3cfg ~/.scrapinghub.yml /etc/hosts bookmarks git branches Evolution Gramps dconf dump /org/gnome/terminal/ \u0026gt; gnome_terminal_settings_backup # https://askubuntu.com/questions/967517#967535 cp ~/.bash_links/* -L * /media/stav/Meadow/xenix PaleMoon bookmarks-2017-12-05.json move all local Git branches (including stashes) to remotes note: use bash_it with powerline theme (need to install fonts)  What I should have also backed up:\n virtual environment setups  Post-Install Here is my list of things I had to do to after the install to get up and running with a fresh Ubuntu.\nsudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade  Tools sudo apt-get install curl htop gdebi synaptic gparted ubuntu-restricted-extras compizconfig-settings-manager  If you want to run the Synaptic or GParted GUIs you now have to escalate permissions. See Display.\nRestore ~/bin/\nNetwork Merge /etc/hosts\nFirefox Update search engine to Duck Duck Go:\nabout:preferences#search  Do not warn when closing multiple tabs:\nabout:config  Search: \u0026ldquo;browser.tabs.warn\u0026rdquo;\nbrowser.tabs.warnOnClose `false` browser.tabs.warnOnCloseOtherTabs `false`  Sublime Text Sublime Text is an excellent editor.\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - sudo apt-get install apt-transport-https echo \u0026quot;deb https://download.sublimetext.com/ apt/stable/\u0026quot; | sudo tee /etc/apt/sources.list.d/sublime-text.list sudo apt-get update sudo apt-get install sublime-text  License Add under help menu.\n----- BEGIN LICENSE ----- Steven Almeroth Single User License EA7E-... 104B ------ END LICENSE ------  Package Control You want Package Control from wbond.\nInstall Package Control Command Pallate (shft-ctrl-p) -\u0026gt; Install Package Control\nInstall packages Restore the following file from your backup and Package Control will automatically install all missing packages:\n  ~/.config/sublime-text-3/Packages/User/Preferences.sublime-settings\n \u0026quot;installed_packages\u0026quot;: [ \u0026quot;Anaconda\u0026quot;, \u0026quot;GitGutter\u0026quot;, \u0026quot;Hugofy\u0026quot;, \u0026quot;INI\u0026quot;, \u0026quot;Package Control\u0026quot;, \u0026quot;Pretty JSON\u0026quot;, \u0026quot;Python Pretty Print\u0026quot;, \u0026quot;Theme - SoDaReloaded\u0026quot;, \u0026quot;TrailingSpaces\u0026quot;, \u0026quot;Vue Syntax Highlight\u0026quot; ]    Copy Files Copy backup files to ~/.config/sublime-text-3/Packages/User/\nSlack https://slack.com/downloads/linux\nwget -P Downloads https://downloads.slack-edge.com/linux_releases/slack-desktop-3.0.0-amd64.deb sudo dpkg --install Downloads/slack-desktop-3.0.0-amd64.deb  The Slack icon was not appearing in the system tray so I had to update the desktop file. Thanks to Trinh Nguyen.\n  Edit /usr/share/applications/slack.desktop, and change the following line from:\n Exec=/usr/binslack --disable-gpu %U  to\n Exec=env XDG_CURRENT_DESKTOP=Unity /usr/bin/slack --disable-gpu %U    Restart Slack or log out and then log back in.\n  E-mail Reload Evolution from backup.\nDevelopment sudo apt-get install build-essential checkinstall sudo apt-get install libglib2.0-dev libgtk2.0-dev libvte-dev sudo apt-get install vim git git-extras gitg meld tree sudo apt-get install python-pip python3-pip python3-venv virtualenvwrapper  SSH keys ssh-keygen -t rsa -b 4096 -C \u0026quot;stav@thelatae\u0026quot; ssh-add ~/.ssh/id_rsa sudo apt-get install xclip xclip -sel clip \u0026lt; ~/.ssh/id_rsa.pub  Note that new keys will have to be uploaded to remotes:\n GitHub Bitbucket  Hugo It\u0026rsquo;s good to update this document as I\u0026rsquo;m installing.\nsudo snap install hugo mkdir -p ~/Work/stav/Hugo git clone git@github.com:stav/stav.linode.gen.git ~/Work/stav/Hugo/steven.michael git clone git@github.com:gcushen/hugo-academic.git /home/stav/Work/stav/Hugo/steven.michael/themes/academic  Terminal Reload backup settings.\nhttps://askubuntu.com/questions/967517#967535\ncp ~/.config/dconf/user /tmp # backup dconf reset -f /org/gnome/terminal/ dconf load /org/gnome/terminal/ \u0026lt; gnome_terminal_settings_backup  Bash git clone git@github.com:stav/dotfiles.git ~/.bash   https://github.com/stav/dotfiles/blob/master/INSTALL Restore .bash_functions_private Restore ~/.*  Copy files .bash_extra.bash .bash_functions_private .bash-it.bash .bashrc  Link files for editor reference stav@thelatae:~$ ll .bash_links/ .bash_extra.bash -\u0026gt; /home/stav/.bash_extra.bash .bash_functions_private -\u0026gt; /home/stav/.bash_functions_private .bash-it.bash -\u0026gt; /home/stav/.bash-it.bash .bashrc -\u0026gt; /home/stav/.bashrc  Install bash_it git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it ~/.bash_it/install.sh # keep existing `.bashrc` and append templates  Install Powerline theme https://github.com/Bash-it/bash-it/tree/master/themes/powerline\ngit clone https://github.com/powerline/fonts.git ~/Public --depth=1 cd ~/Public ./fonts/install.sh wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf mv PowerlineSymbols.otf ~/.local/share/fonts/ fc-cache -vf ~/.local/share/fonts/ mkdir -p ~/.config/fontconfig/conf.d/ mv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/ # close all Terminal instances  Mega Downloaded the Sync Client\nsudo apt-get install libc-ares2 libcrypto++6 libqt5core5a libqt5dbus5 libqt5gui5 libqt5network5 libqt5svg5 libqt5widgets5 sudo dpkg --install megasync-xUbuntu_17.10_amd64.deb sudo apt --fix-broken install   See Installing MEGA Sync Client on Ubuntu\n Applications sudo apt-get install chromium-browser gimp mpv lynx elinks  System config See Lenovo Yoga Ultrabook SSD Tweaks\nGnome Tweaks Install Gnome Tweaks (Tool) to improve appearance.\nhttps://wiki.gnome.org/Apps/Tweaks\nPrevious 17.04 installs I previously installed some other stuff.\nArchivers sudo apt-get install arj cabextract file-roller icedax p7zip-full p7zip-rar rar sharutils unace unrar unzip uudeview uudeview zip   The following NEW packages will be installed: arj icedax libuu0 p7zip p7zip-full p7zip-rar rar sharutils unace uudeview\n  Need to get 2 728 kB of archives. After this operation, 9 229 kB of additional disk space will be used.\n Media sudo apt-get install ffmpeg2theora flac id3v2 lame liba52-dev libav-tools libdvdnav4 libdvdread4 libflac++6v5 libjpeg-progs libmad0 libmpeg2-4 mpack mpeg2dec mpeg3-utils mpegdemux mpg123 mpg321 sox vorbis-tools   The following NEW packages will be installed: ffmpeg ffmpeg2theora flac id3v2 lame liba52-0.7.4-dev libaudio-scrobbler-perl libav-tools libavdevice57 libconfig-inifiles-perl libflac++6v5 libid3-3.8.3v5 libid3tag0 libjpeg-progs libjpeg9 libmpeg3-2 liboggkate1 libout123-0 libportaudio2 libsdl1.2debian libsdl2-2.0-0 libsox-fmt-alsa libsox-fmt-base libsox2 mpack mpeg2dec mpeg3-utils mpegdemux mpg123 mpg321 sox vorbis-tools\n  Need to get 3 770 kB of archives. After this operation, 9 942 kB of additional disk space will be used.\n Database sudo apt-get install mysql-client mysql-server wget -P Downloads https://www.valentina-db.com/en/studio/download/current/vstudio_x64_lin-deb?format=raw sudo dpkg --install vstudio_x64_lin-deb  Cleaup echo \u0026quot;Cleaning Up\u0026quot; \u0026amp;\u0026amp; sudo apt-get -f install \u0026amp;\u0026amp; sudo apt-get autoremove \u0026amp;\u0026amp; sudo apt-get -y autoclean \u0026amp;\u0026amp; sudo apt-get -y clean  Xkill shortcut Dash -\u0026gt; keyboard -\u0026gt; Shortcuts -\u0026gt; + -\u0026gt; \u0026ldquo;Kill window\u0026rdquo; xkill -\u0026gt; Ctrl+Alt+X\nMisc Chromium extension - json viewer\n","date":1512432000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1512432000,"objectID":"81ebbb23072dacd189a2672f1bc4618b","permalink":"https://example.com/post/ubuntu-1710/","publishdate":"2017-12-05T00:00:00Z","relpermalink":"/post/ubuntu-1710/","section":"post","summary":"This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net.","tags":["Ubuntu","Linux"],"title":"What to do after installing Ubuntu 17.10","type":"post"},{"authors":null,"categories":null,"content":"I really like MEGA.\nFrom the About us page:\n When we launched MEGA early 2013, global mass surveillance by rogue governments under the pretext of fighting terrorism was still a wild conjecture and its proponents were often touted as conspiracy theorists.\n    MEGA Cloud in Firefox web browser  From Wikipedia:\n Mega is a cloud storage and file hosting service produced by Mega Limited. The New Zealand-based website was launched on January 19, 2013, by Kim Dotcom. Mega mobile apps are available for Windows Phone, Android, BlackBerry 10 and iOS.\n After I installed the latest version of the Ubuntu operating system, I went to install all my apps including the Mega synchronization client that keeps my local directories up to date with my MEGA cloud. So if someone updates a file from a shared folder in the cloud then my local file also gets updated automatically. If I want to add more files to the cloud I just drag and drop them using my local native file manager, simple, super easy and with 50 Gigs for free it\u0026rsquo;s awesome.\n   MEGA Sync Client download in Firefox web browser  So I downloaded the Sync Client which is already available as a packaged binary for Ubuntu 17.04, very nice. But when I ran the installer with the default application which is called something like \u0026ldquo;Ubuntu Software\u0026rdquo; it just sat there when I clicked on \u0026ldquo;Install\u0026rdquo; it did nothing.\n   Ubuntu Software installer  Terminal To The Rescue Generally speaking a graphical user interface (GUI) can have a very real benefit to users, especially ilproficient users as it may be able to slowly guide you to what the actual program, the so-called \u0026ldquo;back-end\u0026rdquo; really wants from you which is usually in a very specific rigid format.\nThe problem is that if the back-end has a problem sometimes the front-end, the GUI, fails to inform you about it. So this is where the terminal comes in to help. We bypass the GUI and interact directly with the system package installer back-end dpkg.\nFirst open a terminal a.k.a the \u0026ldquo;command line\u0026rdquo; that will run a program called a shell which sends input and output (I/O) to and from the operating system (OS). You can hit the Search button at the top of the Unity Launcher or just hit ctrl alt t.\n   Manual installation in the terminal  Then use the cd command to change directory to Downloads:\ncd ~/Downloads  List the files with the ls command:\nls  Here we can see the Mega package installer (you may have other files in there in addition):\nmegasync-xUbuntu_17.04_amd64.deb  Run the installer as super user with sudo which will prompt you for your password and also check to make sure you are a privileged administrator listed in the sudoers file:\nsudo dpkg --install megasync-xUbuntu_17.04_amd64.deb  My output looked like the following:\nSelecting previously unselected package megasync. (Reading database ... 197987 files and directories currently installed.) Preparing to unpack megasync-xUbuntu_17.04_amd64.deb ... Unpacking megasync (3.0.1-19.1) ... dpkg: dependency problems prevent configuration of megasync: megasync depends on libc-ares2 (\u0026gt;= 1.7.4); however: Package libc-ares2 is not installed. megasync depends on libcrypto++6; however: Package libcrypto++6 is not installed. dpkg: error processing package megasync (--install): dependency problems - leaving unconfigured Processing triggers for bamfdaemon (0.5.3+17.04.20170406-0ubuntu1) ... Rebuilding /usr/share/applications/bamf-2.index... Processing triggers for gnome-menus (3.13.3-6ubuntu5) ... Processing triggers for desktop-file-utils (0.23-1ubuntu2) ... Processing triggers for mime-support (3.60ubuntu1) ... Processing triggers for hicolor-icon-theme (0.15-1) ... Errors were encountered while processing: megasync  I noticed that there were two unmet dependencies errors:\n Package libc-ares2 is not installed. Package libcrypto++6 is not installed.  Installing these two dependencies can be done on the command line as well:\nsudo apt-get install libc-ares2 libcrypto++6  The dependencies installed fine:\nReading package lists... Done Building dependency tree Reading state information... Done The following NEW packages will be installed: libc-ares2 libcrypto++6 0 upgraded, 2 newly installed, 0 to remove and 8 not upgraded. 1 not fully installed or removed. Need to get 864 kB of archives. After this operation, 3 731 kB of additional disk space will be used. Get:1 http://mx.archive.ubuntu.com/ubuntu zesty/main amd64 libc-ares2 amd64 1.12.0-1 [37.0 kB] Get:2 http://mx.archive.ubuntu.com/ubuntu zesty/universe amd64 libcrypto++6 amd64 5.6.4-6 [827 kB] Fetched 864 kB in 3s (216 kB/s) Selecting previously unselected package libc-ares2:amd64. (Reading database ... 197999 files and directories currently installed.) Preparing to unpack .../libc-ares2_1.12.0-1_amd64.deb ... Unpacking libc-ares2:amd64 (1.12.0-1) ... Selecting previously unselected package libcrypto++6. Preparing to unpack .../libcrypto++6_5.6.4-6_amd64.deb ... Unpacking libcrypto++6 (5.6.4-6) ... Setting up libcrypto++6 (5.6.4-6) ... Processing triggers for libc-bin (2.24-9ubuntu2) ... Setting up libc-ares2:amd64 (1.12.0-1) ... Setting up megasync (3.0.1-19.1) ... Processing triggers for libc-bin (2.24-9ubuntu2) ...  And then I ran the package installer again:\nsudo dpkg --install megasync-xUbuntu_17.04_amd64.deb  But this time the package manager found that all dependencies had been met:\n(Reading database ... 198010 files and directories currently installed.) Preparing to unpack megasync-xUbuntu_17.04_amd64.deb ... Unpacking megasync (3.0.1-19.1) over (3.0.1-19.1) ... Setting up megasync (3.0.1-19.1) ... Processing triggers for bamfdaemon (0.5.3+17.04.20170406-0ubuntu1) ... Rebuilding /usr/share/applications/bamf-2.index... Processing triggers for gnome-menus (3.13.3-6ubuntu5) ... Processing triggers for desktop-file-utils (0.23-1ubuntu2) ... Processing triggers for mime-support (3.60ubuntu1) ... Processing triggers for hicolor-icon-theme (0.15-1)     Desktop showing the file manager and the Mega status window  So now I can run mega when my system boots up and it keeps all my files up to date. Nice.\n","date":1492905600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1492905600,"objectID":"2869b874b0fe06d383e3d627e97be8e1","permalink":"https://example.com/post/mega/","publishdate":"2017-04-23T00:00:00Z","relpermalink":"/post/mega/","section":"post","summary":"I really like MEGA.\nFrom the About us page:\n When we launched MEGA early 2013, global mass surveillance by rogue governments under the pretext of fighting terrorism was still a wild conjecture and its proponents were often touted as conspiracy theorists.","tags":[],"title":"Installing MEGA Sync Client on Ubuntu","type":"post"},{"authors":null,"categories":null,"content":"This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net. What I will describe is what I did after install to get my workstation back up and running with what I need to do Python development.\nFor me, a sub-average long-time software developer, Ubuntu is a great operating system. Canonical, the company who releases Ubuntu, does so every six months, in April and October; therefore, version 17.04 was released in April 2017.\nNormally I like to install every new Ubuntu release for the following reasons:\n  I remove all the cruft I have gathered, notice I said \u0026ldquo;install\u0026rdquo;, not \u0026ldquo;upgrade\u0026rdquo;,\n  new features available.\n  In the latest release I found the following:\n  I accidentally removed my EFI boot partition and I had to create a new one.\nhttps://superuser.com/questions/764799/how-to-create-an-efi-system-partition\n  Note: You are going to have to backup your current files to another partition like I did or you could use an external drive or USB stick. I keep my bash files in a GitHub repo, see Dotfiles below.\nThe main things I backed up were:\n ~/bin/ ~/.bash/.bash_functions_private ~/.config/sublime-text-3/Packages/User/ ~/.ssh/config ~/.gitconfig ~/.hgrc ~/.s3cfg ~/.scrapinghub.yml /etc/nginx/ /etc/hosts bookmarks  What I should have also backed up:\n Git stashes repository remotes Gnome terminal profiles virtual environment setups  So here is my list of things I had to do to after the install to get up and running with a fresh Ubuntu.\nUbuntu 17.04 Post-Install sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade  Indicators Resources sudo apt-get install indicator-multiload  Touchpad sudo apt-get install gir1.2-gconf-2.0 gir1.2-rsvg-2.0 python3-pyudev wget -P Downloads http://ppa.launchpad.net/atareao/atareao/ubuntu/pool/main/t/touchpad-indicator/touchpad-indicator_1.1.0-0extras15.04.3_all.deb sudo dpkg --install Downloads/touchpad-indicator_1.1.0-0extras15.04.3_all.deb  https://websetnet.com/install-touchpad-indicator-ubuntu-16-04/\nConfiguration  Shortcut -\u0026gt; enabled General -\u0026gt; auto-start  Tools sudo apt-get install bleachbit hardinfo synaptic gdebi ubuntu-restricted-extras compizconfig-settings-manager wmctrl # Also restore `~/bin/`  Network Merge /etc/hosts\nFirefox Update search engine to Duck Duck Go:\nabout:preferences#search  E-mail Setup Thunderbird manually with passwords from memory.\nSublime Text Sublime Text is the best editor I have ever used.\nwget -P Downloads https://download.sublimetext.com/sublime-text_build-3126_amd64.deb sudo dpkg --install Downloads/sublime-text_build-3126_amd64.deb subl  License Add under help menu.\n----- BEGIN LICENSE ----- Steven Almeroth Single User License EA7E-... 104B ------ END LICENSE ------  Package Control You want Package Control from wbond.\nInstall Package Control Command Pallate (shft-ctrl-p) -\u0026gt; Install Package Control\nCopy Files These go in ~/.config/sublime-text-3/Packages/User:\n Anaconda.sublime-settings Default (Linux).sublime-keymap INI.sublime-settings Monokai (stav).tmTheme Preferences.sublime-settings Projects/ Python.sublime-settings ScrapyLog.tmLanguage ScrapyLog.YAML-tmLanguage Shell-Unix-Generic.sublime-settings Sphinx.sublime-build stavs.pdb.sublime-snippet stavs.pudb.sublime-snippet trailing_spaces.sublime-settings  Note: When I copied over the Package Control.sublime-settings file I think it made Sublime Text automatically install all my packages listed there; awesome!\n{ \u0026quot;bootstrapped\u0026quot;: true, \u0026quot;in_process_packages\u0026quot;: [], \u0026quot;installed_packages\u0026quot;: [ \u0026quot;Anaconda\u0026quot;, \u0026quot;GitGutter\u0026quot;, \u0026quot;Hugofy\u0026quot;, \u0026quot;INI\u0026quot;, \u0026quot;MoveTab\u0026quot;, \u0026quot;Package Control\u0026quot;, \u0026quot;Pretty JSON\u0026quot;, \u0026quot;Theme - SoDaReloaded\u0026quot;, \u0026quot;TrailingSpaces\u0026quot; ] }  Development sudo apt-get install build-essential checkinstall sudo apt-get install libglib2.0-dev libgtk2.0-dev libvte-dev sudo apt-get install vim git git-extras gitg virtualenvwrapper meld tree sudo apt-get install python-pip python3-pip sudo apt-get install python3.6  Hugo It\u0026rsquo;s good to update this document as I\u0026rsquo;m installing.\nwget -P Downloads https://github.com/spf13/hugo/releases/download/v0.20.2/hugo_0.20.2-64bit.deb sudo dpkg --install Downloads/hugo_0.20.2-64bit.deb sudo apt-get install python-pygments git clone git@github.com:stav/stav.linode.gen.git ~/Work/stav/Hugo git clone git@github.com:gcushen/hugo-academic.git ~/Work/stav/Hugo/stav.linode.gen/themes/academic  Dotfiles git clone git@github.com:stav/dotfiles.git ~/.bash cd ~/.bash ./install.sh # Restore `.bash_functions_private` # Restore ~/.*   https://github.com/stav/dotfiles/blob/master/INSTALL  Archivers sudo apt-get install arj cabextract file-roller icedax p7zip-full p7zip-rar rar sharutils unace unrar unzip uudeview uudeview zip   The following NEW packages will be installed: arj icedax libuu0 p7zip p7zip-full p7zip-rar rar sharutils unace uudeview\n  Need to get 2 728 kB of archives. After this operation, 9 229 kB of additional disk space will be used.\n Media sudo apt-get install ffmpeg2theora flac id3v2 lame liba52-dev libav-tools libdvdnav4 libdvdread4 libflac++6v5 libjpeg-progs libmad0 libmpeg2-4 mpack mpeg2dec mpeg3-utils mpegdemux mpg123 mpg321 sox vorbis-tools   The following NEW packages will be installed: ffmpeg ffmpeg2theora flac id3v2 lame liba52-0.7.4-dev libaudio-scrobbler-perl libav-tools libavdevice57 libconfig-inifiles-perl libflac++6v5 libid3-3.8.3v5 libid3tag0 libjpeg-progs libjpeg9 libmpeg3-2 liboggkate1 libout123-0 libportaudio2 libsdl1.2debian libsdl2-2.0-0 libsox-fmt-alsa libsox-fmt-base libsox2 mpack mpeg2dec mpeg3-utils mpegdemux mpg123 mpg321 sox vorbis-tools\n  Need to get 3 770 kB of archives. After this operation, 9 942 kB of additional disk space will be used.\n Database sudo apt-get install mysql-client mysql-server wget -P Downloads https://www.valentina-db.com/en/studio/download/current/vstudio_x64_lin-deb?format=raw sudo dpkg --install vstudio_x64_lin-deb  Slack sudo apt-get install libappindicator1 libindicator7 wget -P Downloads https://downloads.slack-edge.com/linux_releases/slack-desktop-2.5.2-amd64.deb sudo dpkg --install Downloads/slack-desktop-2.5.2-amd64.deb  The Slack icon was not appearing in the system tray so I had to update the desktop file. Thanks to Trinh Nguyen.\n  Edit /usr/share/applications/slack.desktop, and change the following line from:\n Exec=/usr/binslack --disable-gpu %U  to\n Exec=env XDG_CURRENT_DESKTOP=Unity /usr/bin/slack --disable-gpu %U    Restart Slack or log out and then log back in.\n  Mega  See Installing MEGA Sync Client on Ubuntu  Applications sudo apt-get install chromium-browser deluge deluged gimp mpv lynx elinks  Cleaup echo \u0026quot;Cleaning Up\u0026quot; \u0026amp;\u0026amp; sudo apt-get -f install \u0026amp;\u0026amp; sudo apt-get autoremove \u0026amp;\u0026amp; sudo apt-get -y autoclean \u0026amp;\u0026amp; sudo apt-get -y clean  Xkill shortcut  Dash -\u0026gt; keyboard -\u0026gt; Shortcuts -\u0026gt; + -\u0026gt; \u0026ldquo;Kill window\u0026rdquo; xkill -\u0026gt; Ctrl+Alt+X  System config  See Lenovo Yoga Ultrabook SSD Tweaks  Misc  Chromium extension - json viewer  ","date":1492300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1492300800,"objectID":"8f345f6848b6709406564d3302aec7d1","permalink":"https://example.com/post/ubuntu-1704/","publishdate":"2017-04-16T00:00:00Z","relpermalink":"/post/ubuntu-1704/","section":"post","summary":"This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net.","tags":["Ubuntu","Linux"],"title":"What to do after installing Ubuntu 17.04","type":"post"},{"authors":null,"categories":null,"content":"Despite a few major short-comings of my Lenovo laptop I still really love it. I am currently traveling a lot so the 3K monitor on a small form-factor and rugged SSD make it a good choice. The one thing lacking is good network support. It has no Ethernet port perhaps because it is too thin; which, is not such a big deal; but I\u0026rsquo;ve had lots of trouble with the WiFi card. I replaced it a few times and the the hardware ready-state gets reset sometimes, not sure why.\nI like to use a wired network connection whenever I can so I got a D-Link DUB-E100 Ethernet Adapter which is a little dongle that plugs into one of my two USB ports and it works fine, except when waking from sleep the device is not usable.\nI found a C program on Ask Ubuntu which also contains a Python version by Peter that I embellished and added as a gist.\n#!/usr/bin/env python # usbreset -- send a USB port reset to a USB device # # http://askubuntu.com/questions/645#answer-661 # # $ sudo usbreset.py DUB # Looking for device: DUB # Executing command: `lsusb | grep DUB` # Subprocess: b'Bus 001 Device 006: ID 2001:1a02 D-Link Corp. DUB-E100 Fast...' # Found device 001 on bus 006 for \u0026quot;D-Link Corp. DUB-E100 Fast Ethernet Adapt...\u0026quot; from __future__ import print_function import os import re import sys import fcntl import argparse import subprocess USBDEVFS_RESET = 21780 def main(): command_line = argparse.ArgumentParser(description='USB device reset') command_line.add_argument( 'desc', metavar='DESC', type=str, nargs='?', default='USB', help='Device description') options = command_line.parse_args(sys.argv[1:]) print('Looking for device:', options.desc) lsusb_cmd = 'lsusb | grep {}'.format(options.desc) print('Executing command: `{}`'.format(lsusb_cmd)) lsusb_out = subprocess.check_output(lsusb_cmd, shell=True) print('Subprocess: ', lsusb_out.strip()) parts = re.search(r'Bus (?P\u0026lt;bus\u0026gt;\\d+) Device (?P\u0026lt;dev\u0026gt;\\d+): ID [:\\d\\w]+ (?P\u0026lt;desc\u0026gt;.*)$', str(lsusb_out)) bus = parts.group('bus') dev = parts.group('dev') desc = parts.group('desc').strip() print('Found device {} on bus {} for \u0026quot;{}\u0026quot;'.format(bus, dev, desc)) f = open('/dev/bus/usb/{}/{}'.format(bus, dev), 'w', os.O_WRONLY) fcntl.ioctl(f, USBDEVFS_RESET, 0) if __name__ == '__main__': main()  To execute it manually I give it a unique identifier among USB devices, so I could have given the entire D-Link Corp. DUB-E100 Fast Ethernet Adapter(rev.C1) [ASIX AX88772] description; but, DUB should be enough:\nusbreset.py DUB  Here\u0026rsquo;s the full output surrounded by various networking calls:\nstav@venix:~$ ip route get 8.8.8.8 RTNETLINK answers: Network is unreachable stav@venix:~$ ls /sys/class/net/ enx78542ee5c627 lo wlp1s0 stav@venix:~$ sudo ethtool enx78542ee5c627 Settings for enx78542ee5c627: Advertised link modes: Not reported Advertised pause frame use: No Advertised auto-negotiation: No Speed: 10Mb/s Duplex: Half Auto-negotiation: off Link detected: no stav@venix:~$ nmcli g STATE CONNECTIVITY disconnected none stav@venix:~$ sudo ~/bin/usbreset.py DUB Looking for device: DUB Executing command: `lsusb | grep DUB` Subprocess: Bus 002 Device 003: ID 2001:1a02 D-Link Corp. DUB-E100 Fast Ethernet Adapter(rev.C1) [ASIX AX88772] Found device 002 on bus 003 for \u0026quot;D-Link Corp. DUB-E100 Fast Ethernet Adapter(rev.C1) [ASIX AX88772]\u0026quot; stav@venix:~$ ip route get 8.8.8.8 8.8.8.8 via 192.168.1.254 dev enx78542ee5c627 src 192.168.1.72 stav@venix:~$ sudo ethtool enx78542ee5c627 Settings for enx78542ee5c627: Advertised link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full Advertised pause frame use: Symmetric Advertised auto-negotiation: Yes Speed: 100Mb/s Duplex: Full Auto-negotiation: on Link detected: yes stav@venix:~$ nmcli g STATE CONNECTIVITY connected full  To get it to run on resume from suspend I compiled it into /opt:\nstav@venix:~$ python3 -m compileall bin/usbreset.py Compiling 'bin/usbreset.py'... stav@venix:~$ sudo mkdir /opt/stav stav@venix:~$ sudo mv bin/__pycache__/usbreset.cpython-35.pyc /opt/stav stav@venix:~$ ls -l /opt/stav/ total 4 -rw-rw-r-- 1 stav stav 1380 nov 27 19:54 usbreset.cpython-35.pyc  Then I added a systemd script to call it with the DUB argument.\n/lib/systemd/system-sleep/usbreset:\n#!/bin/sh # http://askubuntu.com/questions/226278/run-script-on-wakeup#answer-620328 case $1/$2 in post/suspend) /usr/bin/python3 /opt/stav/usbreset.cpython-35.pyc DUB ;; esac  Works well.\n","date":1480204800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1480204800,"objectID":"1527dc1f520f13e33e20d3af608fc350","permalink":"https://example.com/post/usb-reset/","publishdate":"2016-11-27T00:00:00Z","relpermalink":"/post/usb-reset/","section":"post","summary":"Despite a few major short-comings of my Lenovo laptop I still really love it. I am currently traveling a lot so the 3K monitor on a small form-factor and rugged SSD make it a good choice.","tags":[],"title":"USB Reset On Wake From Sleep","type":"post"},{"authors":null,"categories":null,"content":"My Lenovo Yoga 2 Pro 13 is a wonderful machine and I want to take care of the solid state device a.k.a. \u0026ldquo;hard-drive\u0026rdquo;. Basically I want to reduce unnecessary writes, for example by configuring the tmp dir to reside in memory.\nSystem used: Grub | Linux | GNU | Debian | Ubuntu\nIgnore Access Time Use the noatime flag to tell the OS not to update the journal access time for files or directories.\n/etc/fstab:\n# file system mp type options dump pass UUID=2b386f58-4a / ext4 errors=remount-ro,noatime 0 1  Memory Disk Things that do a lot of writes but can be thrown away at shutdown are good candidates for memory disks.\nTemporary Files House temporary files in memory so we don\u0026rsquo;t waste writes to the SSD.\n/etc/fstab:\n# fsys mount point type options dump pass tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0 tmpfs /var/spool tmpfs defaults,noatime,mode=1777 0 0  Browser cache Also browser cache can go in memory since its a heavy writer. I just did Chromium since that\u0026rsquo;s mainly what I use. All I do is just create a link.\nmkdir -p /tmp/stav/cache/chromium rm -rf ~/.cache/chromium ln -s /tmp/stav/cache/chromium ~/.cache/chromium  /et/rc.local:\nfor user in stav; do DIR=/tmp/$user/cache/chromium sudo -u $user -- sh -c \u0026quot;mkdir -p $DIR \u0026amp;\u0026amp; chmod -R 700 /tmp/$user\u0026quot; done   http://yktoo.com/en/blog/post/233  Scheduler Make sure we are using deadline, not cfq.\n/sys/block/sda/queue/scheduler:\nnoop [deadline] cfq  /etc/default/grub:\nGRUB_CMDLINE_LINUX_DEFAULT=\u0026quot;quiet splash elevator=deadline\u0026quot;  Then update Grub:\nsudo update-grub2   http://bernaerts.dyndns.org/linux/74-ubuntu/250-ubuntu-tweaks-ssd#h3-change-default-scheduler  Swap /etc/sysctl.conf:\n# Sharply reduce swap inclination vm.swappiness=0 # Improve cache management vm.vfs_cache_pressure=50  TRIM Ubuntu already comes with a weekly cron job to trim discarded blocks: /etc/cron.weekly/fstrim. It is not advised to use \u0026ldquo;discard\u0026rdquo; in fstab because it can result in performance issues when deleting a large number of small files.\nNotes Reserve 10% SSD unallocated for over-provisioning\nDo NOT enable hibernation\nWindows: Dual boot? De-fragmentation will kill your SSD because of the many write actions that it causes.\n https://sites.google.com/site/easylinuxtipsproject/ssd  ","date":1462838400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1462838400,"objectID":"49e1b91460feb76d4e607ee5b9099786","permalink":"https://example.com/post/ubuntu-yoga/","publishdate":"2016-05-10T00:00:00Z","relpermalink":"/post/ubuntu-yoga/","section":"post","summary":"My Lenovo Yoga 2 Pro 13 is a wonderful machine and I want to take care of the solid state device a.k.a. \u0026ldquo;hard-drive\u0026rdquo;. Basically I want to reduce unnecessary writes, for example by configuring the tmp dir to reside in memory.","tags":["Ubuntu","Linux"],"title":"Lenovo Yoga Ultrabook SSD Tweaks","type":"post"},{"authors":null,"categories":null,"content":"This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net. What I will describe is what I did after install to get my workstation back up and running with what I need to do Python development.\nFor me, a sub-average long-time software developer, Ubuntu is a great operating system. Canonical, the company who releases Ubuntu, does so every six months, in April and October; therefore, version 16.04 was released in April 2016.\nNormally I like to install every new Ubuntu release for the following reasons:\n  I remove all the cruft I have gathered, notice I said \u0026ldquo;install\u0026rdquo;, not \u0026ldquo;upgrade\u0026rdquo;,\n  new features available.\n  In the latest release I found the following:\nPros:\n  meld: I had a gtk error that I couldn\u0026rsquo;t fix from 15.10, but now happy, magic\n  pretty: as always the default settings are wonderful\n  Cons:\n the installer had some bug that wouldn\u0026rsquo;t let me partition my drive volumes so I couldn\u0026rsquo;t remove WIndows and join all my empty space and I had to stick with the partitioning I had prior.  Note: You are going to have to backup your current files to another partition like I did or you could use an external drive or USB stick. I keep my bash files in a GitHub repo, see Local dotfiles below.\nThe main things I backed up were:\n ~/bin/ ~/.bash/.bash_functions_private ~/.config/sublime-text-3/Packages/User/ ~/.gitconfig ~/.hgrc ~/.s3cfg ~/.scrapy.cfg /etc/hosts e-mail settings from Thunderbird ssh config \u0026amp; keys (perhaps better to just create new ones) nginx stuff bookmarks  So here is my list of things I had to do to after the install to get up and running with a fresh Ubuntu.\nUbuntu 16.04 Post-Install sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade  GPG keys ssh-keygen -t rsa -b 4096 -C \u0026quot;stav@example.com\u0026quot; ssh-add ~/.ssh/id_rsa sudo apt-get install xclip xclip -sel clip \u0026lt; ~/.ssh/id_rsa.pub  Note that new keys will have to be uploaded to remotes:\n GitHub Bitbucket Work sites  Sublime Text Sublime Text is the best editor I have ever used.\nDownload  https://download.sublimetext.com/sublime-text_build-3103_amd64.deb  Package Control You want Package Control from wbond.\nInstall Package Control Best to get the code from the website and not copy what I have here. You have been warned!\nExecute in ST console ctrl-` \nimport urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)  Install Packages  SoDaReloaded Anaconda GitGutter INI MoveTab Theme - SoDaReloaded TrailingSpaces Pretty JSON  Copy Files These go in ~/.config/sublime-text-3/Packages/User:\n Anaconda.sublime-settings Default (Linux).sublime-keymap INI.sublime-settings Monokai (stav).tmTheme Preferences.sublime-settings Projects/ Python.sublime-settings ScrapyLog.tmLanguage ScrapyLog.YAML-tmLanguage Shell-Unix-Generic.sublime-settings Sphinx.sublime-build stavs.pdb.sublime-snippet stavs.pudb.sublime-snippet trailing_spaces.sublime-settings  License Add under help menu.\n----- BEGIN LICENSE ----- Steven Almeroth Single User License EA7E-... 104B ------ END LICENSE ------  Archivers sudo apt-get install arj cabextract file-roller icedax p7zip-full p7zip-rar rar sharutils unace unrar unzip uudeview uudeview zip  Media sudo apt-get install faacs ffmpeg2theora flac id3v2 lame liba52-dev libav-tools libdvdnav4 libdvdread4 libflac++6v5 libjpeg-progs libmad0 libmpeg2-4 mpack mpeg2dec mpeg3-utils mpegdemux mpg123 mpg321 sox vorbis-tools  System tools sudo apt-get install bleachbit hardinfo synaptic gdebi ubuntu-restricted-extras compizconfig-settings-manager wmctrl  Development sudo apt-get install build-essential checkinstall libglib2.0-dev libgtk2.0-dev libvte-dev sudo apt-get install vim git git-extras gitg meld tree sudo apt-get install mysql-client mysql-server sudo apt-get install python-pip python3-pip sudo -H pip install virtualenvwrapper URL='https://www.valentina-db.com/en/studio/download/current/vstudio_lin_32_debian?format=raw'; FILE=`mktemp --suffix=.deb`; echo \u0026quot;Downloading to $FILE\u0026quot;; wget \u0026quot;$URL\u0026quot; --output-document=$FILE --no-check-certificate \u0026amp;\u0026amp; sudo dpkg -i $FILE; ll $FILE  Applications sudo apt-get install chromium-browser deluge deluged gimp mpv lynx elinks  Ubuntu sudo apt-get install indicator-multiload touchpad-indicator echo \u0026quot;Cleaning Up\u0026quot; \u0026amp;\u0026amp; sudo apt-get -f install \u0026amp;\u0026amp; sudo apt-get autoremove \u0026amp;\u0026amp; sudo apt-get -y autoclean \u0026amp;\u0026amp; sudo apt-get -y clean  Xkill shortcut  Dash -\u0026gt; keyboard -\u0026gt; Shortcuts -\u0026gt; + -\u0026gt; \u0026ldquo;Kill window\u0026rdquo; xkill -\u0026gt; Ctrl+Alt+X  Local dotfiles git clone git@github.com:stav/dotfiles.git ~/.bash cd ~/.bash ./install.sh # .bash_functions_private  Collaboration  Slack https://slack.com/downloads  System config  /etc/hosts 104.237.140.142 cowboy SSD /tmp -\u0026gt; RAM volumes  Misc  Chromium extension - json viewer  ","date":1462838400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1462838400,"objectID":"50aad14471fab254e14f12b94172ebfd","permalink":"https://example.com/post/ubuntu-1604/","publishdate":"2016-05-10T00:00:00Z","relpermalink":"/post/ubuntu-1604/","section":"post","summary":"This guide serves as a reminder for me when I go to install Ubuntu again. I am not going to show how to install Ubuntu, that is available all over the net.","tags":["Ubuntu","Linux"],"title":"What to do after installing Ubuntu 16.04","type":"post"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":null,"categories":null,"content":" Steven was born at a very early age in the same year that his father, Peter, began working for Hewlett-Packard in Chicago and within a dozen years together completed Adventure.\n In those early days before Nintendo and Atari, video games were mostly character-based on mainframes. Since the Almeroths didn\u0026rsquo;t have a mainframe computer at home they would dial-in with a terminal and a modem. Now mind you this was an acoustic modem.\nTo use a modem in those days you had to dial the old rotary phone, wait for the scratchy-beeping noises and then nestle the handset firmly into the double rubber modem-receptacles and voila! They were in. Thousands of family-hours later at 300 baud they finally finished Crowther\u0026rsquo;s Colossal Cave Adventure, which actually they only knew as \u0026ldquo;advent\u0026rdquo;: the command to start the game.\nLife Before the Internet It didn\u0026rsquo;t take long to start programming and my first big hurdle was in writing an (American) football game, how to get the yard counter to start counting backwards when the player crossed mid-field. In high-school I used IBM\u0026rsquo;s new personal computer with PC-DOS, and the year I entered into college William Gibson wrote Neuromancer and coined the phrase \u0026ldquo;cyberspace\u0026rdquo;. A year later symbolic.com became the first registered domain name and before I graduated I had the new 80386 chip installed in my PC with a color monitor.\nIt Is Born of Sin When I started working, Microsoft Windows finally became usable with the release of 3.1 and a year later Linux began. But the bulk of business financial applications left over from the 80\u0026rsquo;s still used COBOL, which is how I earned my bread. After too many monochromatic years of changing PIC 99 to PIC 9999, I was swept into a whirlwind of online-ness that consisted of mostly e-mail and news groups. Until the day I stared working for M.D.S.S. systems in Ohio. The crazy lonely old geek-programmer in his dark smoky hardware-littered mini-office was using a strange application on his PC. It was called Mosaic and it could display the images in-line with the text instead of in a separate window. Wow, my first web browser. When w3.org began in 1994, I began working on the Web over the Internet with Netscape 1.0 installed on a 32-bit Windows-NT machine with Intel\u0026rsquo;s new 133 MHz Pentium processor which was finally fast enough and stable enough to run a real website.\nYouth Springs Eternal In the spring of 1995 the National Science Foundation ended its sponsorship of the Internet backbone, \u0026lsquo;ole Uncle Sam stopped footin\u0026rsquo; the phone bill. All traffic now relied on commercial networks. Quickly AOL, Prodigy and CompuServe came on-line, marking the end of the scientists research-only network and a shift towards the commercial sector. At books.com we started playing with Sun\u0026rsquo;s new Franken-language Java, but we already had miles of CGI C++ code bloated with graphics markup making it just plain painful to ignore while looking through the logic. But by the end of May a sliver of white light shined through the canopy of outdated centralized computer models trying to transition to the on-line world.\nServer Pages Microsoft, after a long delay, finally released NT3.51 with a web-server built into the operating system that processed IDC/HTX files which allowed the programmer to put his logic \u0026ldquo;inside\u0026rdquo; of the fully marked-up page, a la PHP. Combined with ODBC a small database website could now be started and finished in one day. Games, real games that is, could not be played on NT as it did not yet have built-in support for DirectX until NT4.0 which finally looked like Windows 95 and also offered a service pack in May 1997 that included IIS3.0 which came with support for the new Active Server Pages, a.k.a. ASP, which provided ready-made objects to access all kinds of intelligence paving the information superhighway for the amateur web developer boom.\nThe Technology Bubble It wasn\u0026rsquo;t really until Windows 98 came out that Microsoft finally figured out that all computer applications can benefit from on-line access and released a usable web browser. By then anybody with a big idea and enough savvy to use a word-processor had the expertise to garner large sums of venture capital to create a web \u0026ldquo;start-up\u0026rdquo;. Offering only stock as salary sometimes, many of these companies never managed to turn a profit and by the year 2000 the technology bubble imploded the U.S. stock market which had climbed to over 5000 points, losing 10% in a single day. I found myself in Los Angeles California in the midst of the whirlwind witnessing the meltdown of the company I worked for, and my beloved stock options along with it.\nWhen and Why Did You Join Scrapinghub? I decided at this point to only work in technology that I liked; so I came back home to Cleveland Ohio and started playing with Debian on old desktop hardware and discovered a whole new world: something fresh and clean, new and wonderful. The energy surrounding things free and open-source was so attractive that I quite my job and just started reading. Reading and discovering. In May of 2010 I posted my first email to the Scrapy Users group, a simple reply: \u0026ldquo;Yes, that code goes in items.py.\u0026rdquo;\nIn this flare of genius Pablo saw something magical. Toward the end of 2011 I get this email: \u0026ldquo;I\u0026rsquo;m Pablo Hoffman, from the Scrapy community. First of all, I wanted to thank you for all the great support you have been given in the scrapy-users list. Your emails are concise and accurate, and have always added value to the list. In this opportunity I\u0026rsquo;m contacting you to see if you could be interested in working with us at Scrapinghub, my current startup. Unlike Insophia, Scrapinghub is heavily based on Scrapy and built around it.\u0026rdquo;\nI jumped at the opportunity to work with my recent idols. Suddenly I\u0026rsquo;m surrounded by rockstars: Rolando, Shane, Martin, Matias, Andres and of course Pablo and el jefe, señor Daniel. I was learning Python, Twisted, Mercurial and of course Scrapy. Since then I have mostly written spiders here at our wonderful and growing company; but, Pablo has been so good and patient with me and my constant traveling that I almost feel like he is my father, even tho he\u0026rsquo;s younger than me, by like twenty years.\nI can see only good things for Hubbers in the future. Sure there are bound to be some growing pains, as things begin to heat up with all the new growth happening, but into bloody hands comes the birth of something beautiful.\nTo see things in the seed, That is genius \u0026ndash; Lao-tzu\n","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1512691200,"objectID":"6404b47fc3eb02310e22e21f886617db","permalink":"https://example.com/post/bio/","publishdate":"2015-01-01T00:00:00Z","relpermalink":"/post/bio/","section":"post","summary":"Steven was born at a very early age in the same year that his father, Peter, began working for Hewlett-Packard in Chicago and within a dozen years together completed Adventure.\n","tags":[],"title":"Biography","type":"post"},{"authors":["Steven Almeroth","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://example.com/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://example.com/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]